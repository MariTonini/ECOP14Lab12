

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Wed Jul 28 22:56:52 2021

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1
    16                           	psect	text8,global,reloc=2,class=CODE,delta=1
    17                           	psect	text9,global,reloc=2,class=CODE,delta=1
    18                           	psect	text10,global,reloc=2,class=CODE,delta=1
    19                           	psect	text11,global,reloc=2,class=CODE,delta=1
    20                           	psect	text12,global,reloc=2,class=CODE,delta=1
    21                           	psect	text13,global,reloc=2,class=CODE,delta=1
    22                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text16,global,reloc=2,class=CODE,delta=1
    25                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    27                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    28                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    29                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    30  0000                     
    31                           ; Version 2.20
    32                           ; Generated 12/02/2020 GMT
    33                           ; 
    34                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    35                           ; All rights reserved.
    36                           ; 
    37                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    38                           ; 
    39                           ; Redistribution and use in source and binary forms, with or without modification, are
    40                           ; permitted provided that the following conditions are met:
    41                           ; 
    42                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    43                           ;        conditions and the following disclaimer.
    44                           ; 
    45                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    46                           ;        of conditions and the following disclaimer in the documentation and/or other
    47                           ;        materials provided with the distribution.
    48                           ; 
    49                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    50                           ;        software without specific prior written permission.
    51                           ; 
    52                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    53                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    54                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    55                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    56                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    57                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    58                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    59                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    60                           ; 
    61                           ; 
    62                           ; Code-generator required, PIC18F4520 Definitions
    63                           ; 
    64                           ; SFR Addresses
    65  0000                     _ADRESL	set	4035
    66  0000                     _ADRESH	set	4036
    67  0000                     _ADCON0bits	set	4034
    68  0000                     _ADCON2	set	4032
    69  0000                     _ADCON1	set	4033
    70  0000                     _ADCON0	set	4034
    71                           
    72                           ; #config settings
    73                           
    74                           	psect	cinit
    75  007A16                     __pcinit:
    76                           	callstack 0
    77  007A16                     start_initialization:
    78                           	callstack 0
    79  007A16                     __initialization:
    80                           	callstack 0
    81                           
    82                           ; Clear objects allocated to COMRAM (10 bytes)
    83  007A16  EE00  F01A         	lfsr	0,__pbssCOMRAM
    84  007A1A  0E0A               	movlw	10
    85  007A1C                     clear_0:
    86  007A1C  6AEE               	clrf	postinc0,c
    87  007A1E  06E8               	decf	wreg,f,c
    88  007A20  E1FD               	bnz	clear_0
    89  007A22                     end_of_initialization:
    90                           	callstack 0
    91  007A22                     __end_of__initialization:
    92                           	callstack 0
    93  007A22  0E00               	movlw	low (__Lmediumconst shr (0+16))
    94  007A24  6EF8               	movwf	tblptru,c
    95  007A26  0100               	movlb	0
    96  007A28  EF53  F03D         	goto	_main	;jump to C main() function
    97                           
    98                           	psect	bssCOMRAM
    99  00001A                     __pbssCOMRAM:
   100                           	callstack 0
   101  00001A                     _tmp:
   102                           	callstack 0
   103  00001A                     	ds	1
   104  00001B                     _pot:
   105                           	callstack 0
   106  00001B                     	ds	1
   107  00001C                     _inferior:
   108                           	callstack 0
   109  00001C                     	ds	1
   110  00001D                     _superior:
   111                           	callstack 0
   112  00001D                     	ds	1
   113  00001E                     _str:
   114                           	callstack 0
   115  00001E                     	ds	6
   116                           
   117                           	psect	cstackCOMRAM
   118  000001                     __pcstackCOMRAM:
   119                           	callstack 0
   120  000001                     ?_adc_amostra:
   121                           	callstack 0
   122  000001                     ?___lwmod:
   123                           	callstack 0
   124  000001                     lcd_wr@val:
   125                           	callstack 0
   126  000001                     atraso_ms@t:
   127                           	callstack 0
   128  000001                     ___lwmod@dividend:
   129                           	callstack 0
   130                           
   131                           ; 2 bytes @ 0x0
   132  000001                     	ds	2
   133  000003                     ??_adc_amostra:
   134  000003                     atraso_ms@i:
   135                           	callstack 0
   136  000003                     ___lwmod@divisor:
   137                           	callstack 0
   138                           
   139                           ; 2 bytes @ 0x2
   140  000003                     	ds	2
   141  000005                     atraso_ms@j:
   142                           	callstack 0
   143  000005                     ___lwmod@counter:
   144                           	callstack 0
   145                           
   146                           ; 1 bytes @ 0x4
   147  000005                     	ds	1
   148  000006                     atraso_ms@k:
   149                           	callstack 0
   150                           
   151                           ; 1 bytes @ 0x5
   152  000006                     	ds	1
   153  000007                     adc_amostra@canal:
   154                           	callstack 0
   155  000007                     lcd_cmd@val:
   156                           	callstack 0
   157  000007                     lcd_dat@val:
   158                           	callstack 0
   159                           
   160                           ; 1 bytes @ 0x6
   161  000007                     	ds	1
   162  000008                     ?___wmul:
   163                           	callstack 0
   164  000008                     ___wmul@multiplier:
   165                           	callstack 0
   166                           
   167                           ; 2 bytes @ 0x7
   168  000008                     	ds	2
   169  00000A                     ___wmul@multiplicand:
   170                           	callstack 0
   171                           
   172                           ; 2 bytes @ 0x9
   173  00000A                     	ds	2
   174  00000C                     ___wmul@product:
   175                           	callstack 0
   176                           
   177                           ; 2 bytes @ 0xB
   178  00000C                     	ds	2
   179  00000E                     ?___lwdiv:
   180                           	callstack 0
   181  00000E                     ___lwdiv@dividend:
   182                           	callstack 0
   183                           
   184                           ; 2 bytes @ 0xD
   185  00000E                     	ds	2
   186  000010                     ___lwdiv@divisor:
   187                           	callstack 0
   188                           
   189                           ; 2 bytes @ 0xF
   190  000010                     	ds	2
   191  000012                     ___lwdiv@quotient:
   192                           	callstack 0
   193                           
   194                           ; 2 bytes @ 0x11
   195  000012                     	ds	2
   196  000014                     ___lwdiv@counter:
   197                           	callstack 0
   198                           
   199                           ; 1 bytes @ 0x13
   200  000014                     	ds	1
   201  000015                     ??_pwmSet1:
   202  000015                     itoa@val:
   203                           	callstack 0
   204                           
   205                           ; 2 bytes @ 0x14
   206  000015                     	ds	2
   207  000017                     pwmSet1@porcento:
   208                           	callstack 0
   209  000017                     itoa@str:
   210                           	callstack 0
   211                           
   212                           ; 2 bytes @ 0x16
   213  000017                     	ds	1
   214  000018                     pwmSet1@val:
   215                           	callstack 0
   216                           
   217                           ; 2 bytes @ 0x17
   218  000018                     	ds	1
   219  000019                     ConfiguraLimiteSuperior@temp:
   220                           	callstack 0
   221  000019                     ConfiguraLimiteInferior@temp:
   222                           	callstack 0
   223                           
   224                           ; 1 bytes @ 0x18
   225  000019                     	ds	1
   226  00001A                     
   227                           ; 1 bytes @ 0x19
   228 ;;
   229 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   230 ;;
   231 ;; *************** function _main *****************
   232 ;; Defined at:
   233 ;;		line 15 in file "main.c"
   234 ;; Parameters:    Size  Location     Type
   235 ;;		None
   236 ;; Auto vars:     Size  Location     Type
   237 ;;		None
   238 ;; Return value:  Size  Location     Type
   239 ;;                  1    wreg      void 
   240 ;; Registers used:
   241 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   242 ;; Tracked objects:
   243 ;;		On entry : 0/0
   244 ;;		On exit  : 0/0
   245 ;;		Unchanged: 0/0
   246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   247 ;;      Params:         0       0       0       0       0       0       0
   248 ;;      Locals:         0       0       0       0       0       0       0
   249 ;;      Temps:          0       0       0       0       0       0       0
   250 ;;      Totals:         0       0       0       0       0       0       0
   251 ;;Total ram usage:        0 bytes
   252 ;; Hardware stack levels required when called:    4
   253 ;; This function calls:
   254 ;;		_AtualizarSistema
   255 ;;		_ConfiguraLimiteInferior
   256 ;;		_ConfiguraLimiteSuperior
   257 ;;		_adc_init
   258 ;;		_lcd_init
   259 ;; This function is called by:
   260 ;;		Startup code after reset
   261 ;; This function uses a non-reentrant model
   262 ;;
   263                           
   264                           	psect	text0
   265  007AA6                     __ptext0:
   266                           	callstack 0
   267  007AA6                     _main:
   268                           	callstack 27
   269  007AA6                     
   270                           ;main.c: 16:     (*(volatile __near unsigned char*)0xFC1) = 0x06;
   271  007AA6  0E06               	movlw	6
   272  007AA8  6EC1               	movwf	193,c	;volatile
   273                           
   274                           ;main.c: 17:     (*(volatile __near unsigned char*)0xF93) = 0x01;
   275  007AAA  0E01               	movlw	1
   276  007AAC  6E93               	movwf	147,c	;volatile
   277                           
   278                           ;main.c: 18:     (*(volatile __near unsigned char*)0xF94) = 0x00;
   279  007AAE  0E00               	movlw	0
   280  007AB0  6E94               	movwf	148,c	;volatile
   281                           
   282                           ;main.c: 19:     (*(volatile __near unsigned char*)0xF95) = 0x00;
   283  007AB2  0E00               	movlw	0
   284  007AB4  6E95               	movwf	149,c	;volatile
   285                           
   286                           ;main.c: 20:     (*(volatile __near unsigned char*)0xF96) = 0x00;
   287  007AB6  0E00               	movlw	0
   288  007AB8  6E96               	movwf	150,c	;volatile
   289                           
   290                           ;main.c: 21:     (*(volatile __near unsigned char*)0xF93) = 0xF8;
   291  007ABA  0EF8               	movlw	248
   292  007ABC  6E93               	movwf	147,c	;volatile
   293  007ABE                     
   294                           ;main.c: 23:     lcd_init();
   295  007ABE  EC6F  F03D         	call	_lcd_init	;wreg free
   296  007AC2                     
   297                           ;main.c: 24:     adc_init();
   298  007AC2  ECFA  F03C         	call	_adc_init	;wreg free
   299  007AC6                     
   300                           ;main.c: 26:     ConfiguraLimiteSuperior(27);
   301  007AC6  0E1B               	movlw	27
   302  007AC8  ECF4  F03C         	call	_ConfiguraLimiteSuperior
   303  007ACC                     
   304                           ;main.c: 27:     ConfiguraLimiteInferior(25);
   305  007ACC  0E19               	movlw	25
   306  007ACE  ECEE  F03C         	call	_ConfiguraLimiteInferior
   307  007AD2                     l1338:
   308                           
   309                           ;main.c: 29:         AtualizarSistema();
   310  007AD2  EC71  F03E         	call	_AtualizarSistema	;wreg free
   311                           
   312                           ;main.c: 30:     }
   313  007AD6  EF69  F03D         	goto	l1338
   314  007ADA  EF00  F000         	goto	start
   315  007ADE                     __end_of_main:
   316                           	callstack 0
   317                           
   318 ;; *************** function _lcd_init *****************
   319 ;; Defined at:
   320 ;;		line 29 in file "lcd.c"
   321 ;; Parameters:    Size  Location     Type
   322 ;;		None
   323 ;; Auto vars:     Size  Location     Type
   324 ;;		None
   325 ;; Return value:  Size  Location     Type
   326 ;;                  1    wreg      void 
   327 ;; Registers used:
   328 ;;		wreg, status,2, status,0, cstack
   329 ;; Tracked objects:
   330 ;;		On entry : 0/0
   331 ;;		On exit  : 0/0
   332 ;;		Unchanged: 0/0
   333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   334 ;;      Params:         0       0       0       0       0       0       0
   335 ;;      Locals:         0       0       0       0       0       0       0
   336 ;;      Temps:          0       0       0       0       0       0       0
   337 ;;      Totals:         0       0       0       0       0       0       0
   338 ;;Total ram usage:        0 bytes
   339 ;; Hardware stack levels used:    1
   340 ;; Hardware stack levels required when called:    2
   341 ;; This function calls:
   342 ;;		_atraso_ms
   343 ;;		_lcd_cmd
   344 ;; This function is called by:
   345 ;;		_main
   346 ;; This function uses a non-reentrant model
   347 ;;
   348                           
   349                           	psect	text1
   350  007ADE                     __ptext1:
   351                           	callstack 0
   352  007ADE                     _lcd_init:
   353                           	callstack 28
   354  007ADE                     
   355                           ;lcd.c: 30:     (((*(volatile __near unsigned char*)0xF84)) &= ~(1<<1));
   356  007ADE  9284               	bcf	132,1,c	;volatile
   357                           
   358                           ;lcd.c: 31:     (((*(volatile __near unsigned char*)0xF84)) &= ~(1<<2));
   359  007AE0  9484               	bcf	132,2,c	;volatile
   360  007AE2                     
   361                           ;lcd.c: 32:     atraso_ms(20);
   362  007AE2  0E00               	movlw	0
   363  007AE4  6E02               	movwf	(atraso_ms@t+1)^0,c
   364  007AE6  0E14               	movlw	20
   365  007AE8  6E01               	movwf	atraso_ms@t^0,c
   366  007AEA  ECCF  F03D         	call	_atraso_ms	;wreg free
   367  007AEE                     
   368                           ;lcd.c: 33:     (((*(volatile __near unsigned char*)0xF84)) |= (1<<1));
   369  007AEE  8284               	bsf	132,1,c	;volatile
   370                           
   371                           ;lcd.c: 35:     lcd_cmd(0x38);
   372  007AF0  0E38               	movlw	56
   373  007AF2  EC29  F03D         	call	_lcd_cmd
   374                           
   375                           ;lcd.c: 36:     atraso_ms(5);
   376  007AF6  0E00               	movlw	0
   377  007AF8  6E02               	movwf	(atraso_ms@t+1)^0,c
   378  007AFA  0E05               	movlw	5
   379  007AFC  6E01               	movwf	atraso_ms@t^0,c
   380  007AFE  ECCF  F03D         	call	_atraso_ms	;wreg free
   381                           
   382                           ;lcd.c: 37:     lcd_cmd(0x38);
   383  007B02  0E38               	movlw	56
   384  007B04  EC29  F03D         	call	_lcd_cmd
   385                           
   386                           ;lcd.c: 38:     atraso_ms(1);
   387  007B08  0E00               	movlw	0
   388  007B0A  6E02               	movwf	(atraso_ms@t+1)^0,c
   389  007B0C  0E01               	movlw	1
   390  007B0E  6E01               	movwf	atraso_ms@t^0,c
   391  007B10  ECCF  F03D         	call	_atraso_ms	;wreg free
   392                           
   393                           ;lcd.c: 39:     lcd_cmd(0x38);
   394  007B14  0E38               	movlw	56
   395  007B16  EC29  F03D         	call	_lcd_cmd
   396                           
   397                           ;lcd.c: 40:     lcd_cmd(0x08);
   398  007B1A  0E08               	movlw	8
   399  007B1C  EC29  F03D         	call	_lcd_cmd
   400                           
   401                           ;lcd.c: 41:     lcd_cmd(0x0F);
   402  007B20  0E0F               	movlw	15
   403  007B22  EC29  F03D         	call	_lcd_cmd
   404                           
   405                           ;lcd.c: 42:     lcd_cmd(0x01);
   406  007B26  0E01               	movlw	1
   407  007B28  EC29  F03D         	call	_lcd_cmd
   408                           
   409                           ;lcd.c: 43:     lcd_cmd(0x38);
   410  007B2C  0E38               	movlw	56
   411  007B2E  EC29  F03D         	call	_lcd_cmd
   412                           
   413                           ;lcd.c: 44:     lcd_cmd(0x80);
   414  007B32  0E80               	movlw	128
   415  007B34  EC29  F03D         	call	_lcd_cmd
   416  007B38  0012               	return		;funcret
   417  007B3A                     __end_of_lcd_init:
   418                           	callstack 0
   419                           
   420 ;; *************** function _adc_init *****************
   421 ;; Defined at:
   422 ;;		line 29 in file "adc.c"
   423 ;; Parameters:    Size  Location     Type
   424 ;;		None
   425 ;; Auto vars:     Size  Location     Type
   426 ;;		None
   427 ;; Return value:  Size  Location     Type
   428 ;;                  1    wreg      void 
   429 ;; Registers used:
   430 ;;		wreg, status,2
   431 ;; Tracked objects:
   432 ;;		On entry : 0/0
   433 ;;		On exit  : 0/0
   434 ;;		Unchanged: 0/0
   435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   436 ;;      Params:         0       0       0       0       0       0       0
   437 ;;      Locals:         0       0       0       0       0       0       0
   438 ;;      Temps:          0       0       0       0       0       0       0
   439 ;;      Totals:         0       0       0       0       0       0       0
   440 ;;Total ram usage:        0 bytes
   441 ;; Hardware stack levels used:    1
   442 ;; This function calls:
   443 ;;		Nothing
   444 ;; This function is called by:
   445 ;;		_main
   446 ;; This function uses a non-reentrant model
   447 ;;
   448                           
   449                           	psect	text2
   450  0079F4                     __ptext2:
   451                           	callstack 0
   452  0079F4                     _adc_init:
   453                           	callstack 30
   454  0079F4                     
   455                           ;adc.c: 34:     ADCON0 = 0x01;
   456  0079F4  0E01               	movlw	1
   457  0079F6  6EC2               	movwf	194,c	;volatile
   458                           
   459                           ;adc.c: 35:     ADCON1 = 0x0B;
   460  0079F8  0E0B               	movlw	11
   461  0079FA  6EC1               	movwf	193,c	;volatile
   462                           
   463                           ;adc.c: 36:     ADCON2 = 0x01;
   464  0079FC  0E01               	movlw	1
   465  0079FE  6EC0               	movwf	192,c	;volatile
   466  007A00  0012               	return		;funcret
   467  007A02                     __end_of_adc_init:
   468                           	callstack 0
   469                           
   470 ;; *************** function _ConfiguraLimiteSuperior *****************
   471 ;; Defined at:
   472 ;;		line 46 in file "temperatura.c"
   473 ;; Parameters:    Size  Location     Type
   474 ;;  temp            1    wreg     unsigned char 
   475 ;; Auto vars:     Size  Location     Type
   476 ;;  temp            1   24[COMRAM] unsigned char 
   477 ;; Return value:  Size  Location     Type
   478 ;;                  1    wreg      void 
   479 ;; Registers used:
   480 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   481 ;; Tracked objects:
   482 ;;		On entry : 0/0
   483 ;;		On exit  : 0/0
   484 ;;		Unchanged: 0/0
   485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   486 ;;      Params:         0       0       0       0       0       0       0
   487 ;;      Locals:         1       0       0       0       0       0       0
   488 ;;      Temps:          0       0       0       0       0       0       0
   489 ;;      Totals:         1       0       0       0       0       0       0
   490 ;;Total ram usage:        1 bytes
   491 ;; Hardware stack levels used:    1
   492 ;; Hardware stack levels required when called:    3
   493 ;; This function calls:
   494 ;;		_atualizaLCD
   495 ;; This function is called by:
   496 ;;		_main
   497 ;; This function uses a non-reentrant model
   498 ;;
   499                           
   500                           	psect	text3
   501  0079E8                     __ptext3:
   502                           	callstack 0
   503  0079E8                     _ConfiguraLimiteSuperior:
   504                           	callstack 27
   505                           
   506                           ;incstack = 0
   507                           ;ConfiguraLimiteSuperior@temp stored from wreg
   508  0079E8  6E19               	movwf	ConfiguraLimiteSuperior@temp^0,c
   509  0079EA                     
   510                           ;temperatura.c: 47:     superior = temp;
   511  0079EA  C019  F01D         	movff	ConfiguraLimiteSuperior@temp,_superior
   512  0079EE                     
   513                           ;temperatura.c: 48:     atualizaLCD();
   514  0079EE  ECFC  F03E         	call	_atualizaLCD	;wreg free
   515  0079F2  0012               	return		;funcret
   516  0079F4                     __end_of_ConfiguraLimiteSuperior:
   517                           	callstack 0
   518                           
   519 ;; *************** function _ConfiguraLimiteInferior *****************
   520 ;; Defined at:
   521 ;;		line 51 in file "temperatura.c"
   522 ;; Parameters:    Size  Location     Type
   523 ;;  temp            1    wreg     unsigned char 
   524 ;; Auto vars:     Size  Location     Type
   525 ;;  temp            1   24[COMRAM] unsigned char 
   526 ;; Return value:  Size  Location     Type
   527 ;;                  1    wreg      void 
   528 ;; Registers used:
   529 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   530 ;; Tracked objects:
   531 ;;		On entry : 0/0
   532 ;;		On exit  : 0/0
   533 ;;		Unchanged: 0/0
   534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   535 ;;      Params:         0       0       0       0       0       0       0
   536 ;;      Locals:         1       0       0       0       0       0       0
   537 ;;      Temps:          0       0       0       0       0       0       0
   538 ;;      Totals:         1       0       0       0       0       0       0
   539 ;;Total ram usage:        1 bytes
   540 ;; Hardware stack levels used:    1
   541 ;; Hardware stack levels required when called:    3
   542 ;; This function calls:
   543 ;;		_atualizaLCD
   544 ;; This function is called by:
   545 ;;		_main
   546 ;; This function uses a non-reentrant model
   547 ;;
   548                           
   549                           	psect	text4
   550  0079DC                     __ptext4:
   551                           	callstack 0
   552  0079DC                     _ConfiguraLimiteInferior:
   553                           	callstack 27
   554                           
   555                           ;incstack = 0
   556                           ;ConfiguraLimiteInferior@temp stored from wreg
   557  0079DC  6E19               	movwf	ConfiguraLimiteInferior@temp^0,c
   558  0079DE                     
   559                           ;temperatura.c: 52:     inferior = temp;
   560  0079DE  C019  F01C         	movff	ConfiguraLimiteInferior@temp,_inferior
   561  0079E2                     
   562                           ;temperatura.c: 53:     atualizaLCD();
   563  0079E2  ECFC  F03E         	call	_atualizaLCD	;wreg free
   564  0079E6  0012               	return		;funcret
   565  0079E8                     __end_of_ConfiguraLimiteInferior:
   566                           	callstack 0
   567                           
   568 ;; *************** function _AtualizarSistema *****************
   569 ;; Defined at:
   570 ;;		line 56 in file "temperatura.c"
   571 ;; Parameters:    Size  Location     Type
   572 ;;		None
   573 ;; Auto vars:     Size  Location     Type
   574 ;;		None
   575 ;; Return value:  Size  Location     Type
   576 ;;                  1    wreg      void 
   577 ;; Registers used:
   578 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   579 ;; Tracked objects:
   580 ;;		On entry : 0/0
   581 ;;		On exit  : 0/0
   582 ;;		Unchanged: 0/0
   583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   584 ;;      Params:         0       0       0       0       0       0       0
   585 ;;      Locals:         0       0       0       0       0       0       0
   586 ;;      Temps:          0       0       0       0       0       0       0
   587 ;;      Totals:         0       0       0       0       0       0       0
   588 ;;Total ram usage:        0 bytes
   589 ;; Hardware stack levels used:    1
   590 ;; Hardware stack levels required when called:    3
   591 ;; This function calls:
   592 ;;		___lwdiv
   593 ;;		___wmul
   594 ;;		_adc_amostra
   595 ;;		_atualizaLCD
   596 ;;		_pwmInit
   597 ;;		_pwmSet1
   598 ;; This function is called by:
   599 ;;		_main
   600 ;; This function uses a non-reentrant model
   601 ;;
   602                           
   603                           	psect	text5
   604  007CE2                     __ptext5:
   605                           	callstack 0
   606  007CE2                     _AtualizarSistema:
   607                           	callstack 27
   608  007CE2                     
   609                           ;temperatura.c: 57:     pwmInit();
   610  007CE2  EC01  F03D         	call	_pwmInit	;wreg free
   611  007CE6                     
   612                           ;temperatura.c: 58:     tmp = (adc_amostra(0)*10) / 204;
   613  007CE6  0E00               	movlw	0
   614  007CE8  ECB4  F03E         	call	_adc_amostra
   615  007CEC  C001  F008         	movff	?_adc_amostra,___wmul@multiplier
   616  007CF0  C002  F009         	movff	?_adc_amostra+1,___wmul@multiplier+1
   617  007CF4  0E00               	movlw	0
   618  007CF6  6E0B               	movwf	(___wmul@multiplicand+1)^0,c
   619  007CF8  0E0A               	movlw	10
   620  007CFA  6E0A               	movwf	___wmul@multiplicand^0,c
   621  007CFC  EC16  F03D         	call	___wmul	;wreg free
   622  007D00  C008  F00E         	movff	?___wmul,___lwdiv@dividend
   623  007D04  C009  F00F         	movff	?___wmul+1,___lwdiv@dividend+1
   624  007D08  0E00               	movlw	0
   625  007D0A  6E11               	movwf	(___lwdiv@divisor+1)^0,c
   626  007D0C  0ECC               	movlw	204
   627  007D0E  6E10               	movwf	___lwdiv@divisor^0,c
   628  007D10  EC37  F03E         	call	___lwdiv	;wreg free
   629  007D14  500E               	movf	?___lwdiv^0,w,c
   630  007D16  6E1A               	movwf	_tmp^0,c
   631  007D18                     
   632                           ;temperatura.c: 59:     if(tmp > superior) {
   633  007D18  501A               	movf	_tmp^0,w,c
   634  007D1A  5C1D               	subwf	_superior^0,w,c
   635  007D1C  B0D8               	btfsc	status,0,c
   636  007D1E  EF93  F03E         	goto	u291
   637  007D22  EF95  F03E         	goto	u290
   638  007D26                     u291:
   639  007D26  EF9C  F03E         	goto	l1316
   640  007D2A                     u290:
   641  007D2A                     
   642                           ;temperatura.c: 60:         pot = 100;
   643  007D2A  0E64               	movlw	100
   644  007D2C  6E1B               	movwf	_pot^0,c
   645  007D2E                     
   646                           ;temperatura.c: 61:         pwmSet1(99);
   647  007D2E  0E63               	movlw	99
   648  007D30  EC01  F03E         	call	_pwmSet1
   649                           
   650                           ;temperatura.c: 62:     } else if(tmp < inferior) {
   651  007D34  EFB1  F03E         	goto	l1326
   652  007D38                     l1316:
   653  007D38  501C               	movf	_inferior^0,w,c
   654  007D3A  5C1A               	subwf	_tmp^0,w,c
   655  007D3C  B0D8               	btfsc	status,0,c
   656  007D3E  EFA3  F03E         	goto	u301
   657  007D42  EFA5  F03E         	goto	u300
   658  007D46                     u301:
   659  007D46  EFAC  F03E         	goto	l1322
   660  007D4A                     u300:
   661  007D4A                     
   662                           ;temperatura.c: 63:         pot = 0;
   663  007D4A  0E00               	movlw	0
   664  007D4C  6E1B               	movwf	_pot^0,c
   665  007D4E                     
   666                           ;temperatura.c: 64:         pwmSet1(0);
   667  007D4E  0E00               	movlw	0
   668  007D50  EC01  F03E         	call	_pwmSet1
   669                           
   670                           ;temperatura.c: 65:     }else{
   671  007D54  EFB1  F03E         	goto	l1326
   672  007D58                     l1322:
   673                           
   674                           ;temperatura.c: 66:         pot = 50;
   675  007D58  0E32               	movlw	50
   676  007D5A  6E1B               	movwf	_pot^0,c
   677  007D5C                     
   678                           ;temperatura.c: 67:         pwmSet1(50);
   679  007D5C  0E32               	movlw	50
   680  007D5E  EC01  F03E         	call	_pwmSet1
   681  007D62                     l1326:
   682                           
   683                           ;temperatura.c: 69:     atualizaLCD();
   684  007D62  ECFC  F03E         	call	_atualizaLCD	;wreg free
   685  007D66  0012               	return		;funcret
   686  007D68                     __end_of_AtualizarSistema:
   687                           	callstack 0
   688                           
   689 ;; *************** function _pwmSet1 *****************
   690 ;; Defined at:
   691 ;;		line 23 in file "pwm.c"
   692 ;; Parameters:    Size  Location     Type
   693 ;;  porcento        1    wreg     unsigned char 
   694 ;; Auto vars:     Size  Location     Type
   695 ;;  porcento        1   22[COMRAM] unsigned char 
   696 ;;  val             2   23[COMRAM] unsigned int 
   697 ;; Return value:  Size  Location     Type
   698 ;;                  1    wreg      void 
   699 ;; Registers used:
   700 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   701 ;; Tracked objects:
   702 ;;		On entry : 0/0
   703 ;;		On exit  : 0/0
   704 ;;		Unchanged: 0/0
   705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   706 ;;      Params:         0       0       0       0       0       0       0
   707 ;;      Locals:         3       0       0       0       0       0       0
   708 ;;      Temps:          2       0       0       0       0       0       0
   709 ;;      Totals:         5       0       0       0       0       0       0
   710 ;;Total ram usage:        5 bytes
   711 ;; Hardware stack levels used:    1
   712 ;; Hardware stack levels required when called:    1
   713 ;; This function calls:
   714 ;;		___lwdiv
   715 ;;		___wmul
   716 ;; This function is called by:
   717 ;;		_AtualizarSistema
   718 ;; This function uses a non-reentrant model
   719 ;;
   720                           
   721                           	psect	text6
   722  007C02                     __ptext6:
   723                           	callstack 0
   724  007C02                     _pwmSet1:
   725                           	callstack 28
   726                           
   727                           ;incstack = 0
   728                           ;pwmSet1@porcento stored from wreg
   729  007C02  6E17               	movwf	pwmSet1@porcento^0,c
   730  007C04                     
   731                           ;pwm.c: 23: void pwmSet1(unsigned char porcento);pwm.c: 24: {;pwm.c: 30:  unsigned int v
      +                          al = ((unsigned int)porcento) *((*(volatile __near unsigned char*)0xFCB)+1);
   732  007C04  0E01               	movlw	1
   733  007C06  24CB               	addwf	203,w,c	;volatile
   734  007C08  6E08               	movwf	___wmul@multiplier^0,c
   735  007C0A  6A09               	clrf	(___wmul@multiplier+1)^0,c
   736  007C0C  0E00               	movlw	0
   737  007C0E  2209               	addwfc	(___wmul@multiplier+1)^0,f,c
   738  007C10  C017  F00A         	movff	pwmSet1@porcento,___wmul@multiplicand
   739  007C14  6A0B               	clrf	(___wmul@multiplicand+1)^0,c
   740  007C16  EC16  F03D         	call	___wmul	;wreg free
   741  007C1A  C008  F018         	movff	?___wmul,pwmSet1@val
   742  007C1E  C009  F019         	movff	?___wmul+1,pwmSet1@val+1
   743  007C22                     
   744                           ;pwm.c: 31:  val = val / 25;
   745  007C22  C018  F00E         	movff	pwmSet1@val,___lwdiv@dividend
   746  007C26  C019  F00F         	movff	pwmSet1@val+1,___lwdiv@dividend+1
   747  007C2A  0E00               	movlw	0
   748  007C2C  6E11               	movwf	(___lwdiv@divisor+1)^0,c
   749  007C2E  0E19               	movlw	25
   750  007C30  6E10               	movwf	___lwdiv@divisor^0,c
   751  007C32  EC37  F03E         	call	___lwdiv	;wreg free
   752  007C36  C00E  F018         	movff	?___lwdiv,pwmSet1@val
   753  007C3A  C00F  F019         	movff	?___lwdiv+1,pwmSet1@val+1
   754  007C3E                     
   755                           ;pwm.c: 33:  val &= 0x03ff;
   756  007C3E  0EFF               	movlw	255
   757  007C40  1618               	andwf	pwmSet1@val^0,f,c
   758  007C42  0E03               	movlw	3
   759  007C44  1619               	andwf	(pwmSet1@val+1)^0,f,c
   760  007C46                     
   761                           ;pwm.c: 35:  (*(volatile __near unsigned char*)0xFBE) = val >> 2;
   762  007C46  C018  F015         	movff	pwmSet1@val,??_pwmSet1
   763  007C4A  C019  F016         	movff	pwmSet1@val+1,??_pwmSet1+1
   764  007C4E  90D8               	bcf	status,0,c
   765  007C50  3216               	rrcf	(??_pwmSet1+1)^0,f,c
   766  007C52  3215               	rrcf	??_pwmSet1^0,f,c
   767  007C54  90D8               	bcf	status,0,c
   768  007C56  3216               	rrcf	(??_pwmSet1+1)^0,f,c
   769  007C58  3215               	rrcf	??_pwmSet1^0,f,c
   770  007C5A  5015               	movf	??_pwmSet1^0,w,c
   771  007C5C  6EBE               	movwf	190,c	;volatile
   772  007C5E                     
   773                           ;pwm.c: 37:  (*(volatile __near unsigned char*)0xFBD) |= (val & 0x0003) << 4;
   774  007C5E  C018  F015         	movff	pwmSet1@val,??_pwmSet1
   775  007C62  0E03               	movlw	3
   776  007C64  1615               	andwf	??_pwmSet1^0,f,c
   777  007C66  3815               	swapf	??_pwmSet1^0,w,c
   778  007C68  0BF0               	andlw	240
   779  007C6A  12BD               	iorwf	189,f,c	;volatile
   780  007C6C  0012               	return		;funcret
   781  007C6E                     __end_of_pwmSet1:
   782                           	callstack 0
   783                           
   784 ;; *************** function _pwmInit *****************
   785 ;; Defined at:
   786 ;;		line 59 in file "pwm.c"
   787 ;; Parameters:    Size  Location     Type
   788 ;;		None
   789 ;; Auto vars:     Size  Location     Type
   790 ;;		None
   791 ;; Return value:  Size  Location     Type
   792 ;;                  1    wreg      void 
   793 ;; Registers used:
   794 ;;		wreg, status,2, status,0
   795 ;; Tracked objects:
   796 ;;		On entry : 0/0
   797 ;;		On exit  : 0/0
   798 ;;		Unchanged: 0/0
   799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   800 ;;      Params:         0       0       0       0       0       0       0
   801 ;;      Locals:         0       0       0       0       0       0       0
   802 ;;      Temps:          0       0       0       0       0       0       0
   803 ;;      Totals:         0       0       0       0       0       0       0
   804 ;;Total ram usage:        0 bytes
   805 ;; Hardware stack levels used:    1
   806 ;; This function calls:
   807 ;;		Nothing
   808 ;; This function is called by:
   809 ;;		_AtualizarSistema
   810 ;; This function uses a non-reentrant model
   811 ;;
   812                           
   813                           	psect	text7
   814  007A02                     __ptext7:
   815                           	callstack 0
   816  007A02                     _pwmInit:
   817                           	callstack 29
   818  007A02                     
   819                           ;pwm.c: 61:  (((*(volatile __near unsigned char*)0xF94)) &= ~(1<<1));
   820  007A02  9294               	bcf	148,1,c	;volatile
   821                           
   822                           ;pwm.c: 62:  (((*(volatile __near unsigned char*)0xF94)) &= ~(1<<2));
   823  007A04  9494               	bcf	148,2,c	;volatile
   824  007A06                     
   825                           ;pwm.c: 64:  (*(volatile __near unsigned char*)0xFCA) |= 0b00000011;
   826  007A06  0E03               	movlw	3
   827  007A08  12CA               	iorwf	202,f,c	;volatile
   828  007A0A                     
   829                           ;pwm.c: 65:  (((*(volatile __near unsigned char*)0xFCA)) |= (1<<2));
   830  007A0A  84CA               	bsf	202,2,c	;volatile
   831                           
   832                           ;pwm.c: 68:  (*(volatile __near unsigned char*)0xFBD) |= 0b00001100;
   833  007A0C  0E0C               	movlw	12
   834  007A0E  12BD               	iorwf	189,f,c	;volatile
   835                           
   836                           ;pwm.c: 69:  (*(volatile __near unsigned char*)0xFBA) |= 0b00001100;
   837  007A10  0E0C               	movlw	12
   838  007A12  12BA               	iorwf	186,f,c	;volatile
   839  007A14  0012               	return		;funcret
   840  007A16                     __end_of_pwmInit:
   841                           	callstack 0
   842                           
   843 ;; *************** function _atualizaLCD *****************
   844 ;; Defined at:
   845 ;;		line 13 in file "temperatura.c"
   846 ;; Parameters:    Size  Location     Type
   847 ;;		None
   848 ;; Auto vars:     Size  Location     Type
   849 ;;		None
   850 ;; Return value:  Size  Location     Type
   851 ;;                  1    wreg      void 
   852 ;; Registers used:
   853 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   854 ;; Tracked objects:
   855 ;;		On entry : 0/0
   856 ;;		On exit  : 0/0
   857 ;;		Unchanged: 0/0
   858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   859 ;;      Params:         0       0       0       0       0       0       0
   860 ;;      Locals:         0       0       0       0       0       0       0
   861 ;;      Temps:          0       0       0       0       0       0       0
   862 ;;      Totals:         0       0       0       0       0       0       0
   863 ;;Total ram usage:        0 bytes
   864 ;; Hardware stack levels used:    1
   865 ;; Hardware stack levels required when called:    2
   866 ;; This function calls:
   867 ;;		___lwdiv
   868 ;;		___wmul
   869 ;;		_adc_amostra
   870 ;;		_itoa
   871 ;;		_lcd_cmd
   872 ;;		_lcd_dat
   873 ;; This function is called by:
   874 ;;		_ConfiguraLimiteSuperior
   875 ;;		_ConfiguraLimiteInferior
   876 ;;		_AtualizarSistema
   877 ;; This function uses a non-reentrant model
   878 ;;
   879                           
   880                           	psect	text8
   881  007DF8                     __ptext8:
   882                           	callstack 0
   883  007DF8                     _atualizaLCD:
   884                           	callstack 27
   885  007DF8                     
   886                           ;temperatura.c: 14:     tmp = (adc_amostra(0)*10) / 204;
   887  007DF8  0E00               	movlw	0
   888  007DFA  ECB4  F03E         	call	_adc_amostra
   889  007DFE  C001  F008         	movff	?_adc_amostra,___wmul@multiplier
   890  007E02  C002  F009         	movff	?_adc_amostra+1,___wmul@multiplier+1
   891  007E06  0E00               	movlw	0
   892  007E08  6E0B               	movwf	(___wmul@multiplicand+1)^0,c
   893  007E0A  0E0A               	movlw	10
   894  007E0C  6E0A               	movwf	___wmul@multiplicand^0,c
   895  007E0E  EC16  F03D         	call	___wmul	;wreg free
   896  007E12  C008  F00E         	movff	?___wmul,___lwdiv@dividend
   897  007E16  C009  F00F         	movff	?___wmul+1,___lwdiv@dividend+1
   898  007E1A  0E00               	movlw	0
   899  007E1C  6E11               	movwf	(___lwdiv@divisor+1)^0,c
   900  007E1E  0ECC               	movlw	204
   901  007E20  6E10               	movwf	___lwdiv@divisor^0,c
   902  007E22  EC37  F03E         	call	___lwdiv	;wreg free
   903  007E26  500E               	movf	?___lwdiv^0,w,c
   904  007E28  6E1A               	movwf	_tmp^0,c
   905  007E2A                     
   906                           ;temperatura.c: 15:     lcd_cmd(0x80);
   907  007E2A  0E80               	movlw	128
   908  007E2C  EC29  F03D         	call	_lcd_cmd
   909  007E30                     
   910                           ;temperatura.c: 16:     itoa(tmp,str);
   911  007E30  C01A  F015         	movff	_tmp,itoa@val
   912  007E34  6A16               	clrf	(itoa@val+1)^0,c
   913  007E36  0E1E               	movlw	low _str
   914  007E38  6E17               	movwf	itoa@str^0,c
   915  007E3A  0E00               	movlw	high _str
   916  007E3C  6E18               	movwf	(itoa@str+1)^0,c
   917  007E3E  EC7C  F03F         	call	_itoa	;wreg free
   918  007E42                     
   919                           ;temperatura.c: 17:     lcd_dat('T');
   920  007E42  0E54               	movlw	84
   921  007E44  EC3E  F03D         	call	_lcd_dat
   922  007E48                     
   923                           ;temperatura.c: 18:     lcd_dat(str[1]);
   924  007E48  501F               	movf	(_str+1)^0,w,c
   925  007E4A  EC3E  F03D         	call	_lcd_dat
   926  007E4E                     
   927                           ;temperatura.c: 19:     lcd_dat(str[2]);
   928  007E4E  5020               	movf	(_str+2)^0,w,c
   929  007E50  EC3E  F03D         	call	_lcd_dat
   930  007E54                     
   931                           ;temperatura.c: 20:     lcd_dat(str[3]);
   932  007E54  5021               	movf	(_str+3)^0,w,c
   933  007E56  EC3E  F03D         	call	_lcd_dat
   934  007E5A                     
   935                           ;temperatura.c: 21:     lcd_dat(str[4]);
   936  007E5A  5022               	movf	(_str+4)^0,w,c
   937  007E5C  EC3E  F03D         	call	_lcd_dat
   938  007E60                     
   939                           ;temperatura.c: 23:     itoa(superior,str);
   940  007E60  C01D  F015         	movff	_superior,itoa@val
   941  007E64  6A16               	clrf	(itoa@val+1)^0,c
   942  007E66  0E1E               	movlw	low _str
   943  007E68  6E17               	movwf	itoa@str^0,c
   944  007E6A  0E00               	movlw	high _str
   945  007E6C  6E18               	movwf	(itoa@str+1)^0,c
   946  007E6E  EC7C  F03F         	call	_itoa	;wreg free
   947  007E72                     
   948                           ;temperatura.c: 24:     lcd_dat('H');
   949  007E72  0E48               	movlw	72
   950  007E74  EC3E  F03D         	call	_lcd_dat
   951  007E78                     
   952                           ;temperatura.c: 25:     lcd_dat(str[1]);
   953  007E78  501F               	movf	(_str+1)^0,w,c
   954  007E7A  EC3E  F03D         	call	_lcd_dat
   955  007E7E                     
   956                           ;temperatura.c: 26:     lcd_dat(str[2]);
   957  007E7E  5020               	movf	(_str+2)^0,w,c
   958  007E80  EC3E  F03D         	call	_lcd_dat
   959  007E84                     
   960                           ;temperatura.c: 27:     lcd_dat(str[3]);
   961  007E84  5021               	movf	(_str+3)^0,w,c
   962  007E86  EC3E  F03D         	call	_lcd_dat
   963  007E8A                     
   964                           ;temperatura.c: 28:     lcd_dat(str[4]);
   965  007E8A  5022               	movf	(_str+4)^0,w,c
   966  007E8C  EC3E  F03D         	call	_lcd_dat
   967  007E90                     
   968                           ;temperatura.c: 30:     itoa(inferior,str);
   969  007E90  C01C  F015         	movff	_inferior,itoa@val
   970  007E94  6A16               	clrf	(itoa@val+1)^0,c
   971  007E96  0E1E               	movlw	low _str
   972  007E98  6E17               	movwf	itoa@str^0,c
   973  007E9A  0E00               	movlw	high _str
   974  007E9C  6E18               	movwf	(itoa@str+1)^0,c
   975  007E9E  EC7C  F03F         	call	_itoa	;wreg free
   976  007EA2                     
   977                           ;temperatura.c: 31:     lcd_dat('L');
   978  007EA2  0E4C               	movlw	76
   979  007EA4  EC3E  F03D         	call	_lcd_dat
   980  007EA8                     
   981                           ;temperatura.c: 32:     lcd_dat(str[1]);
   982  007EA8  501F               	movf	(_str+1)^0,w,c
   983  007EAA  EC3E  F03D         	call	_lcd_dat
   984  007EAE                     
   985                           ;temperatura.c: 33:     lcd_dat(str[2]);
   986  007EAE  5020               	movf	(_str+2)^0,w,c
   987  007EB0  EC3E  F03D         	call	_lcd_dat
   988  007EB4                     
   989                           ;temperatura.c: 34:     lcd_dat(str[3]);
   990  007EB4  5021               	movf	(_str+3)^0,w,c
   991  007EB6  EC3E  F03D         	call	_lcd_dat
   992  007EBA                     
   993                           ;temperatura.c: 35:     lcd_dat(str[4]);
   994  007EBA  5022               	movf	(_str+4)^0,w,c
   995  007EBC  EC3E  F03D         	call	_lcd_dat
   996  007EC0                     
   997                           ;temperatura.c: 37:     lcd_cmd(0xC0);
   998  007EC0  0EC0               	movlw	192
   999  007EC2  EC29  F03D         	call	_lcd_cmd
  1000  007EC6                     
  1001                           ;temperatura.c: 38:     itoa(pot,str);
  1002  007EC6  C01B  F015         	movff	_pot,itoa@val
  1003  007ECA  6A16               	clrf	(itoa@val+1)^0,c
  1004  007ECC  0E1E               	movlw	low _str
  1005  007ECE  6E17               	movwf	itoa@str^0,c
  1006  007ED0  0E00               	movlw	high _str
  1007  007ED2  6E18               	movwf	(itoa@str+1)^0,c
  1008  007ED4  EC7C  F03F         	call	_itoa	;wreg free
  1009  007ED8                     
  1010                           ;temperatura.c: 39:     lcd_dat('C');
  1011  007ED8  0E43               	movlw	67
  1012  007EDA  EC3E  F03D         	call	_lcd_dat
  1013  007EDE                     
  1014                           ;temperatura.c: 40:     lcd_dat(str[1]);
  1015  007EDE  501F               	movf	(_str+1)^0,w,c
  1016  007EE0  EC3E  F03D         	call	_lcd_dat
  1017  007EE4                     
  1018                           ;temperatura.c: 41:     lcd_dat(str[2]);
  1019  007EE4  5020               	movf	(_str+2)^0,w,c
  1020  007EE6  EC3E  F03D         	call	_lcd_dat
  1021  007EEA                     
  1022                           ;temperatura.c: 42:     lcd_dat(str[3]);
  1023  007EEA  5021               	movf	(_str+3)^0,w,c
  1024  007EEC  EC3E  F03D         	call	_lcd_dat
  1025  007EF0                     
  1026                           ;temperatura.c: 43:     lcd_dat(str[4]);
  1027  007EF0  5022               	movf	(_str+4)^0,w,c
  1028  007EF2  EC3E  F03D         	call	_lcd_dat
  1029  007EF6  0012               	return		;funcret
  1030  007EF8                     __end_of_atualizaLCD:
  1031                           	callstack 0
  1032                           
  1033 ;; *************** function _lcd_dat *****************
  1034 ;; Defined at:
  1035 ;;		line 19 in file "lcd.c"
  1036 ;; Parameters:    Size  Location     Type
  1037 ;;  val             1    wreg     unsigned char 
  1038 ;; Auto vars:     Size  Location     Type
  1039 ;;  val             1    6[COMRAM] unsigned char 
  1040 ;; Return value:  Size  Location     Type
  1041 ;;                  1    wreg      void 
  1042 ;; Registers used:
  1043 ;;		wreg, status,2, status,0, cstack
  1044 ;; Tracked objects:
  1045 ;;		On entry : 0/0
  1046 ;;		On exit  : 0/0
  1047 ;;		Unchanged: 0/0
  1048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1049 ;;      Params:         0       0       0       0       0       0       0
  1050 ;;      Locals:         1       0       0       0       0       0       0
  1051 ;;      Temps:          0       0       0       0       0       0       0
  1052 ;;      Totals:         1       0       0       0       0       0       0
  1053 ;;Total ram usage:        1 bytes
  1054 ;; Hardware stack levels used:    1
  1055 ;; Hardware stack levels required when called:    1
  1056 ;; This function calls:
  1057 ;;		_atraso_ms
  1058 ;;		_lcd_wr
  1059 ;; This function is called by:
  1060 ;;		_atualizaLCD
  1061 ;;		_lcd_str
  1062 ;; This function uses a non-reentrant model
  1063 ;;
  1064                           
  1065                           	psect	text9
  1066  007A7C                     __ptext9:
  1067                           	callstack 0
  1068  007A7C                     _lcd_dat:
  1069                           	callstack 27
  1070                           
  1071                           ;incstack = 0
  1072                           ;lcd_dat@val stored from wreg
  1073  007A7C  6E07               	movwf	lcd_dat@val^0,c
  1074  007A7E                     
  1075                           ;lcd.c: 20:     (((*(volatile __near unsigned char*)0xF84)) |= (1<<1));
  1076  007A7E  8284               	bsf	132,1,c	;volatile
  1077  007A80                     
  1078                           ;lcd.c: 21:     lcd_wr(val);
  1079  007A80  5007               	movf	lcd_dat@val^0,w,c
  1080  007A82  ECEA  F03C         	call	_lcd_wr
  1081  007A86                     
  1082                           ;lcd.c: 22:     (((*(volatile __near unsigned char*)0xF84)) |= (1<<2));
  1083  007A86  8484               	bsf	132,2,c	;volatile
  1084  007A88                     
  1085                           ;lcd.c: 23:     atraso_ms(3);
  1086  007A88  0E00               	movlw	0
  1087  007A8A  6E02               	movwf	(atraso_ms@t+1)^0,c
  1088  007A8C  0E03               	movlw	3
  1089  007A8E  6E01               	movwf	atraso_ms@t^0,c
  1090  007A90  ECCF  F03D         	call	_atraso_ms	;wreg free
  1091  007A94                     
  1092                           ;lcd.c: 24:     (((*(volatile __near unsigned char*)0xF84)) &= ~(1<<1));
  1093  007A94  9284               	bcf	132,1,c	;volatile
  1094  007A96                     
  1095                           ;lcd.c: 25:     atraso_ms(3);
  1096  007A96  0E00               	movlw	0
  1097  007A98  6E02               	movwf	(atraso_ms@t+1)^0,c
  1098  007A9A  0E03               	movlw	3
  1099  007A9C  6E01               	movwf	atraso_ms@t^0,c
  1100  007A9E  ECCF  F03D         	call	_atraso_ms	;wreg free
  1101  007AA2                     
  1102                           ;lcd.c: 26:     (((*(volatile __near unsigned char*)0xF84)) |= (1<<1));
  1103  007AA2  8284               	bsf	132,1,c	;volatile
  1104  007AA4  0012               	return		;funcret
  1105  007AA6                     __end_of_lcd_dat:
  1106                           	callstack 0
  1107                           
  1108 ;; *************** function _lcd_cmd *****************
  1109 ;; Defined at:
  1110 ;;		line 9 in file "lcd.c"
  1111 ;; Parameters:    Size  Location     Type
  1112 ;;  val             1    wreg     unsigned char 
  1113 ;; Auto vars:     Size  Location     Type
  1114 ;;  val             1    6[COMRAM] unsigned char 
  1115 ;; Return value:  Size  Location     Type
  1116 ;;                  1    wreg      void 
  1117 ;; Registers used:
  1118 ;;		wreg, status,2, status,0, cstack
  1119 ;; Tracked objects:
  1120 ;;		On entry : 0/0
  1121 ;;		On exit  : 0/0
  1122 ;;		Unchanged: 0/0
  1123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1124 ;;      Params:         0       0       0       0       0       0       0
  1125 ;;      Locals:         1       0       0       0       0       0       0
  1126 ;;      Temps:          0       0       0       0       0       0       0
  1127 ;;      Totals:         1       0       0       0       0       0       0
  1128 ;;Total ram usage:        1 bytes
  1129 ;; Hardware stack levels used:    1
  1130 ;; Hardware stack levels required when called:    1
  1131 ;; This function calls:
  1132 ;;		_atraso_ms
  1133 ;;		_lcd_wr
  1134 ;; This function is called by:
  1135 ;;		_lcd_init
  1136 ;;		_atualizaLCD
  1137 ;; This function uses a non-reentrant model
  1138 ;;
  1139                           
  1140                           	psect	text10
  1141  007A52                     __ptext10:
  1142                           	callstack 0
  1143  007A52                     _lcd_cmd:
  1144                           	callstack 28
  1145                           
  1146                           ;incstack = 0
  1147                           ;lcd_cmd@val stored from wreg
  1148  007A52  6E07               	movwf	lcd_cmd@val^0,c
  1149  007A54                     
  1150                           ;lcd.c: 10:     (((*(volatile __near unsigned char*)0xF84)) |= (1<<1));
  1151  007A54  8284               	bsf	132,1,c	;volatile
  1152  007A56                     
  1153                           ;lcd.c: 11:     lcd_wr(val);
  1154  007A56  5007               	movf	lcd_cmd@val^0,w,c
  1155  007A58  ECEA  F03C         	call	_lcd_wr
  1156  007A5C                     
  1157                           ;lcd.c: 12:     (((*(volatile __near unsigned char*)0xF84)) &= ~(1<<2));
  1158  007A5C  9484               	bcf	132,2,c	;volatile
  1159  007A5E                     
  1160                           ;lcd.c: 13:     atraso_ms(3);
  1161  007A5E  0E00               	movlw	0
  1162  007A60  6E02               	movwf	(atraso_ms@t+1)^0,c
  1163  007A62  0E03               	movlw	3
  1164  007A64  6E01               	movwf	atraso_ms@t^0,c
  1165  007A66  ECCF  F03D         	call	_atraso_ms	;wreg free
  1166  007A6A                     
  1167                           ;lcd.c: 14:     (((*(volatile __near unsigned char*)0xF84)) &= ~(1<<1));
  1168  007A6A  9284               	bcf	132,1,c	;volatile
  1169  007A6C                     
  1170                           ;lcd.c: 15:     atraso_ms(3);
  1171  007A6C  0E00               	movlw	0
  1172  007A6E  6E02               	movwf	(atraso_ms@t+1)^0,c
  1173  007A70  0E03               	movlw	3
  1174  007A72  6E01               	movwf	atraso_ms@t^0,c
  1175  007A74  ECCF  F03D         	call	_atraso_ms	;wreg free
  1176  007A78                     
  1177                           ;lcd.c: 16:     (((*(volatile __near unsigned char*)0xF84)) |= (1<<1));
  1178  007A78  8284               	bsf	132,1,c	;volatile
  1179  007A7A  0012               	return		;funcret
  1180  007A7C                     __end_of_lcd_cmd:
  1181                           	callstack 0
  1182                           
  1183 ;; *************** function _lcd_wr *****************
  1184 ;; Defined at:
  1185 ;;		line 5 in file "lcd.c"
  1186 ;; Parameters:    Size  Location     Type
  1187 ;;  val             1    wreg     unsigned char 
  1188 ;; Auto vars:     Size  Location     Type
  1189 ;;  val             1    0[COMRAM] unsigned char 
  1190 ;; Return value:  Size  Location     Type
  1191 ;;                  1    wreg      void 
  1192 ;; Registers used:
  1193 ;;		wreg
  1194 ;; Tracked objects:
  1195 ;;		On entry : 0/0
  1196 ;;		On exit  : 0/0
  1197 ;;		Unchanged: 0/0
  1198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1199 ;;      Params:         0       0       0       0       0       0       0
  1200 ;;      Locals:         1       0       0       0       0       0       0
  1201 ;;      Temps:          0       0       0       0       0       0       0
  1202 ;;      Totals:         1       0       0       0       0       0       0
  1203 ;;Total ram usage:        1 bytes
  1204 ;; Hardware stack levels used:    1
  1205 ;; This function calls:
  1206 ;;		Nothing
  1207 ;; This function is called by:
  1208 ;;		_lcd_cmd
  1209 ;;		_lcd_dat
  1210 ;; This function uses a non-reentrant model
  1211 ;;
  1212                           
  1213                           	psect	text11
  1214  0079D4                     __ptext11:
  1215                           	callstack 0
  1216  0079D4                     _lcd_wr:
  1217                           	callstack 28
  1218                           
  1219                           ;incstack = 0
  1220                           ;lcd_wr@val stored from wreg
  1221  0079D4  6E01               	movwf	lcd_wr@val^0,c
  1222  0079D6                     
  1223                           ;lcd.c: 6:     (*(volatile __near unsigned char*)0xF83) = val;
  1224  0079D6  C001  FF83         	movff	lcd_wr@val,3971	;volatile
  1225  0079DA  0012               	return		;funcret
  1226  0079DC                     __end_of_lcd_wr:
  1227                           	callstack 0
  1228                           
  1229 ;; *************** function _atraso_ms *****************
  1230 ;; Defined at:
  1231 ;;		line 3 in file "delay.c"
  1232 ;; Parameters:    Size  Location     Type
  1233 ;;  t               2    0[COMRAM] unsigned int 
  1234 ;; Auto vars:     Size  Location     Type
  1235 ;;  i               2    2[COMRAM] volatile unsigned int 
  1236 ;;  k               1    5[COMRAM] volatile unsigned char 
  1237 ;;  j               1    4[COMRAM] volatile unsigned char 
  1238 ;; Return value:  Size  Location     Type
  1239 ;;                  1    wreg      void 
  1240 ;; Registers used:
  1241 ;;		wreg, status,2, status,0
  1242 ;; Tracked objects:
  1243 ;;		On entry : 0/0
  1244 ;;		On exit  : 0/0
  1245 ;;		Unchanged: 0/0
  1246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1247 ;;      Params:         2       0       0       0       0       0       0
  1248 ;;      Locals:         4       0       0       0       0       0       0
  1249 ;;      Temps:          0       0       0       0       0       0       0
  1250 ;;      Totals:         6       0       0       0       0       0       0
  1251 ;;Total ram usage:        6 bytes
  1252 ;; Hardware stack levels used:    1
  1253 ;; This function calls:
  1254 ;;		Nothing
  1255 ;; This function is called by:
  1256 ;;		_lcd_cmd
  1257 ;;		_lcd_dat
  1258 ;;		_lcd_init
  1259 ;; This function uses a non-reentrant model
  1260 ;;
  1261                           
  1262                           	psect	text12
  1263  007B9E                     __ptext12:
  1264                           	callstack 0
  1265  007B9E                     _atraso_ms:
  1266                           	callstack 28
  1267  007B9E                     
  1268                           ;delay.c: 4:     volatile unsigned char j, k;;delay.c: 5:     volatile unsigned int i;;d
      +                          elay.c: 6:     for (i = 0; i < t; i++) {
  1269  007B9E  0E00               	movlw	0
  1270  007BA0  6E04               	movwf	(atraso_ms@i+1)^0,c	;volatile
  1271  007BA2  0E00               	movlw	0
  1272  007BA4  6E03               	movwf	atraso_ms@i^0,c	;volatile
  1273  007BA6  EFF5  F03D         	goto	l1130
  1274  007BAA                     l1108:
  1275                           
  1276                           ;delay.c: 7:         for (j = 0; j < 41; j++) {
  1277  007BAA  0E00               	movlw	0
  1278  007BAC  6E05               	movwf	atraso_ms@j^0,c	;volatile
  1279  007BAE                     l1110:
  1280  007BAE  0E28               	movlw	40
  1281  007BB0  6405               	cpfsgt	atraso_ms@j^0,c	;volatile
  1282  007BB2  EFDD  F03D         	goto	u181
  1283  007BB6  EFDF  F03D         	goto	u180
  1284  007BBA                     u181:
  1285  007BBA  EFE1  F03D         	goto	l1114
  1286  007BBE                     u180:
  1287  007BBE  EFF3  F03D         	goto	l1128
  1288  007BC2                     l1114:
  1289                           
  1290                           ;delay.c: 8:             for (k = 0; k < 3; k++);
  1291  007BC2  0E00               	movlw	0
  1292  007BC4  6E06               	movwf	atraso_ms@k^0,c	;volatile
  1293  007BC6                     l1116:
  1294  007BC6  0E02               	movlw	2
  1295  007BC8  6406               	cpfsgt	atraso_ms@k^0,c	;volatile
  1296  007BCA  EFE9  F03D         	goto	u191
  1297  007BCE  EFEB  F03D         	goto	u190
  1298  007BD2                     u191:
  1299  007BD2  EFED  F03D         	goto	l1120
  1300  007BD6                     u190:
  1301  007BD6  EFF0  F03D         	goto	l1124
  1302  007BDA                     l1120:
  1303  007BDA  2A06               	incf	atraso_ms@k^0,f,c	;volatile
  1304  007BDC  EFE3  F03D         	goto	l1116
  1305  007BE0                     l1124:
  1306                           
  1307                           ;delay.c: 9:         }
  1308  007BE0  2A05               	incf	atraso_ms@j^0,f,c	;volatile
  1309  007BE2  EFD7  F03D         	goto	l1110
  1310  007BE6                     l1128:
  1311                           
  1312                           ;delay.c: 10:     }
  1313  007BE6  4A03               	infsnz	atraso_ms@i^0,f,c	;volatile
  1314  007BE8  2A04               	incf	(atraso_ms@i+1)^0,f,c	;volatile
  1315  007BEA                     l1130:
  1316  007BEA  5001               	movf	atraso_ms@t^0,w,c
  1317  007BEC  5C03               	subwf	atraso_ms@i^0,w,c	;volatile
  1318  007BEE  5002               	movf	(atraso_ms@t+1)^0,w,c
  1319  007BF0  5804               	subwfb	(atraso_ms@i+1)^0,w,c	;volatile
  1320  007BF2  A0D8               	btfss	status,0,c
  1321  007BF4  EFFE  F03D         	goto	u201
  1322  007BF8  EF00  F03E         	goto	u200
  1323  007BFC                     u201:
  1324  007BFC  EFD5  F03D         	goto	l1108
  1325  007C00                     u200:
  1326  007C00  0012               	return		;funcret
  1327  007C02                     __end_of_atraso_ms:
  1328                           	callstack 0
  1329                           
  1330 ;; *************** function _itoa *****************
  1331 ;; Defined at:
  1332 ;;		line 3 in file "itoa.c"
  1333 ;; Parameters:    Size  Location     Type
  1334 ;;  val             2   20[COMRAM] unsigned int 
  1335 ;;  str             2   22[COMRAM] PTR unsigned char 
  1336 ;;		 -> str(6), 
  1337 ;; Auto vars:     Size  Location     Type
  1338 ;;		None
  1339 ;; Return value:  Size  Location     Type
  1340 ;;                  1    wreg      void 
  1341 ;; Registers used:
  1342 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1343 ;; Tracked objects:
  1344 ;;		On entry : 0/0
  1345 ;;		On exit  : 0/0
  1346 ;;		Unchanged: 0/0
  1347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1348 ;;      Params:         4       0       0       0       0       0       0
  1349 ;;      Locals:         0       0       0       0       0       0       0
  1350 ;;      Temps:          0       0       0       0       0       0       0
  1351 ;;      Totals:         4       0       0       0       0       0       0
  1352 ;;Total ram usage:        4 bytes
  1353 ;; Hardware stack levels used:    1
  1354 ;; Hardware stack levels required when called:    1
  1355 ;; This function calls:
  1356 ;;		___lwdiv
  1357 ;;		___lwmod
  1358 ;; This function is called by:
  1359 ;;		_atualizaLCD
  1360 ;; This function uses a non-reentrant model
  1361 ;;
  1362                           
  1363                           	psect	text13
  1364  007EF8                     __ptext13:
  1365                           	callstack 0
  1366  007EF8                     _itoa:
  1367                           	callstack 27
  1368  007EF8                     
  1369                           ;itoa.c: 3: void itoa(unsigned int val, char* str );itoa.c: 4: {;itoa.c: 5:   str[0]=(va
      +                          l/10000)+0x30;
  1370  007EF8  C015  F00E         	movff	itoa@val,___lwdiv@dividend
  1371  007EFC  C016  F00F         	movff	itoa@val+1,___lwdiv@dividend+1
  1372  007F00  0E27               	movlw	39
  1373  007F02  6E11               	movwf	(___lwdiv@divisor+1)^0,c
  1374  007F04  0E10               	movlw	16
  1375  007F06  6E10               	movwf	___lwdiv@divisor^0,c
  1376  007F08  EC37  F03E         	call	___lwdiv	;wreg free
  1377  007F0C  500E               	movf	?___lwdiv^0,w,c
  1378  007F0E  0F30               	addlw	48
  1379  007F10  C017  FFD9         	movff	itoa@str,fsr2l
  1380  007F14  C018  FFDA         	movff	itoa@str+1,fsr2h
  1381  007F18  6EDF               	movwf	indf2,c
  1382                           
  1383                           ;itoa.c: 6:   str[1]=((val%10000)/1000)+0x30;
  1384  007F1A  EE20 F001          	lfsr	2,1
  1385  007F1E  5017               	movf	itoa@str^0,w,c
  1386  007F20  26D9               	addwf	fsr2l,f,c
  1387  007F22  5018               	movf	(itoa@str+1)^0,w,c
  1388  007F24  22DA               	addwfc	fsr2h,f,c
  1389  007F26  0E27               	movlw	39
  1390  007F28  6E04               	movwf	(___lwmod@divisor+1)^0,c
  1391  007F2A  0E10               	movlw	16
  1392  007F2C  6E03               	movwf	___lwmod@divisor^0,c
  1393  007F2E  C015  F001         	movff	itoa@val,___lwmod@dividend
  1394  007F32  C016  F002         	movff	itoa@val+1,___lwmod@dividend+1
  1395  007F36  EC9D  F03D         	call	___lwmod	;wreg free
  1396  007F3A  C001  F00E         	movff	?___lwmod,___lwdiv@dividend
  1397  007F3E  C002  F00F         	movff	?___lwmod+1,___lwdiv@dividend+1
  1398  007F42  0E03               	movlw	3
  1399  007F44  6E11               	movwf	(___lwdiv@divisor+1)^0,c
  1400  007F46  0EE8               	movlw	232
  1401  007F48  6E10               	movwf	___lwdiv@divisor^0,c
  1402  007F4A  EC37  F03E         	call	___lwdiv	;wreg free
  1403  007F4E  500E               	movf	?___lwdiv^0,w,c
  1404  007F50  0F30               	addlw	48
  1405  007F52  6EDF               	movwf	indf2,c
  1406                           
  1407                           ;itoa.c: 7:   str[2]=((val%1000)/100)+0x30;
  1408  007F54  EE20 F002          	lfsr	2,2
  1409  007F58  5017               	movf	itoa@str^0,w,c
  1410  007F5A  26D9               	addwf	fsr2l,f,c
  1411  007F5C  5018               	movf	(itoa@str+1)^0,w,c
  1412  007F5E  22DA               	addwfc	fsr2h,f,c
  1413  007F60  0E03               	movlw	3
  1414  007F62  6E04               	movwf	(___lwmod@divisor+1)^0,c
  1415  007F64  0EE8               	movlw	232
  1416  007F66  6E03               	movwf	___lwmod@divisor^0,c
  1417  007F68  C015  F001         	movff	itoa@val,___lwmod@dividend
  1418  007F6C  C016  F002         	movff	itoa@val+1,___lwmod@dividend+1
  1419  007F70  EC9D  F03D         	call	___lwmod	;wreg free
  1420  007F74  C001  F00E         	movff	?___lwmod,___lwdiv@dividend
  1421  007F78  C002  F00F         	movff	?___lwmod+1,___lwdiv@dividend+1
  1422  007F7C  0E00               	movlw	0
  1423  007F7E  6E11               	movwf	(___lwdiv@divisor+1)^0,c
  1424  007F80  0E64               	movlw	100
  1425  007F82  6E10               	movwf	___lwdiv@divisor^0,c
  1426  007F84  EC37  F03E         	call	___lwdiv	;wreg free
  1427  007F88  500E               	movf	?___lwdiv^0,w,c
  1428  007F8A  0F30               	addlw	48
  1429  007F8C  6EDF               	movwf	indf2,c
  1430                           
  1431                           ;itoa.c: 8:   str[3]=((val%100)/10)+0x30;
  1432  007F8E  EE20 F003          	lfsr	2,3
  1433  007F92  5017               	movf	itoa@str^0,w,c
  1434  007F94  26D9               	addwf	fsr2l,f,c
  1435  007F96  5018               	movf	(itoa@str+1)^0,w,c
  1436  007F98  22DA               	addwfc	fsr2h,f,c
  1437  007F9A  0E00               	movlw	0
  1438  007F9C  6E04               	movwf	(___lwmod@divisor+1)^0,c
  1439  007F9E  0E64               	movlw	100
  1440  007FA0  6E03               	movwf	___lwmod@divisor^0,c
  1441  007FA2  C015  F001         	movff	itoa@val,___lwmod@dividend
  1442  007FA6  C016  F002         	movff	itoa@val+1,___lwmod@dividend+1
  1443  007FAA  EC9D  F03D         	call	___lwmod	;wreg free
  1444  007FAE  C001  F00E         	movff	?___lwmod,___lwdiv@dividend
  1445  007FB2  C002  F00F         	movff	?___lwmod+1,___lwdiv@dividend+1
  1446  007FB6  0E00               	movlw	0
  1447  007FB8  6E11               	movwf	(___lwdiv@divisor+1)^0,c
  1448  007FBA  0E0A               	movlw	10
  1449  007FBC  6E10               	movwf	___lwdiv@divisor^0,c
  1450  007FBE  EC37  F03E         	call	___lwdiv	;wreg free
  1451  007FC2  500E               	movf	?___lwdiv^0,w,c
  1452  007FC4  0F30               	addlw	48
  1453  007FC6  6EDF               	movwf	indf2,c
  1454                           
  1455                           ;itoa.c: 9:   str[4]=(val%10)+0x30;
  1456  007FC8  EE20 F004          	lfsr	2,4
  1457  007FCC  5017               	movf	itoa@str^0,w,c
  1458  007FCE  26D9               	addwf	fsr2l,f,c
  1459  007FD0  5018               	movf	(itoa@str+1)^0,w,c
  1460  007FD2  22DA               	addwfc	fsr2h,f,c
  1461  007FD4  C015  F001         	movff	itoa@val,___lwmod@dividend
  1462  007FD8  C016  F002         	movff	itoa@val+1,___lwmod@dividend+1
  1463  007FDC  0E00               	movlw	0
  1464  007FDE  6E04               	movwf	(___lwmod@divisor+1)^0,c
  1465  007FE0  0E0A               	movlw	10
  1466  007FE2  6E03               	movwf	___lwmod@divisor^0,c
  1467  007FE4  EC9D  F03D         	call	___lwmod	;wreg free
  1468  007FE8  5001               	movf	?___lwmod^0,w,c
  1469  007FEA  0F30               	addlw	48
  1470  007FEC  6EDF               	movwf	indf2,c
  1471  007FEE                     
  1472                           ;itoa.c: 10:   str[5]=0;
  1473  007FEE  EE20 F005          	lfsr	2,5
  1474  007FF2  5017               	movf	itoa@str^0,w,c
  1475  007FF4  26D9               	addwf	fsr2l,f,c
  1476  007FF6  5018               	movf	(itoa@str+1)^0,w,c
  1477  007FF8  22DA               	addwfc	fsr2h,f,c
  1478  007FFA  0E00               	movlw	0
  1479  007FFC  6EDF               	movwf	indf2,c
  1480  007FFE  0012               	return		;funcret
  1481  008000                     __end_of_itoa:
  1482                           	callstack 0
  1483                           
  1484 ;; *************** function ___lwmod *****************
  1485 ;; Defined at:
  1486 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\lwmod.c"
  1487 ;; Parameters:    Size  Location     Type
  1488 ;;  dividend        2    0[COMRAM] unsigned int 
  1489 ;;  divisor         2    2[COMRAM] unsigned int 
  1490 ;; Auto vars:     Size  Location     Type
  1491 ;;  counter         1    4[COMRAM] unsigned char 
  1492 ;; Return value:  Size  Location     Type
  1493 ;;                  2    0[COMRAM] unsigned int 
  1494 ;; Registers used:
  1495 ;;		wreg, status,2, status,0
  1496 ;; Tracked objects:
  1497 ;;		On entry : 0/0
  1498 ;;		On exit  : 0/0
  1499 ;;		Unchanged: 0/0
  1500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1501 ;;      Params:         4       0       0       0       0       0       0
  1502 ;;      Locals:         1       0       0       0       0       0       0
  1503 ;;      Temps:          0       0       0       0       0       0       0
  1504 ;;      Totals:         5       0       0       0       0       0       0
  1505 ;;Total ram usage:        5 bytes
  1506 ;; Hardware stack levels used:    1
  1507 ;; This function calls:
  1508 ;;		Nothing
  1509 ;; This function is called by:
  1510 ;;		_itoa
  1511 ;; This function uses a non-reentrant model
  1512 ;;
  1513                           
  1514                           	psect	text14
  1515  007B3A                     __ptext14:
  1516                           	callstack 0
  1517  007B3A                     ___lwmod:
  1518                           	callstack 27
  1519  007B3A  5003               	movf	___lwmod@divisor^0,w,c
  1520  007B3C  1004               	iorwf	(___lwmod@divisor+1)^0,w,c
  1521  007B3E  B4D8               	btfsc	status,2,c
  1522  007B40  EFA4  F03D         	goto	u241
  1523  007B44  EFA6  F03D         	goto	u240
  1524  007B48                     u241:
  1525  007B48  EFCA  F03D         	goto	l640
  1526  007B4C                     u240:
  1527  007B4C  0E01               	movlw	1
  1528  007B4E  6E05               	movwf	___lwmod@counter^0,c
  1529  007B50  EFAE  F03D         	goto	l1160
  1530  007B54                     l1158:
  1531  007B54  90D8               	bcf	status,0,c
  1532  007B56  3603               	rlcf	___lwmod@divisor^0,f,c
  1533  007B58  3604               	rlcf	(___lwmod@divisor+1)^0,f,c
  1534  007B5A  2A05               	incf	___lwmod@counter^0,f,c
  1535  007B5C                     l1160:
  1536  007B5C  AE04               	btfss	(___lwmod@divisor+1)^0,7,c
  1537  007B5E  EFB3  F03D         	goto	u251
  1538  007B62  EFB5  F03D         	goto	u250
  1539  007B66                     u251:
  1540  007B66  EFAA  F03D         	goto	l1158
  1541  007B6A                     u250:
  1542  007B6A                     l1162:
  1543  007B6A  5003               	movf	___lwmod@divisor^0,w,c
  1544  007B6C  5C01               	subwf	___lwmod@dividend^0,w,c
  1545  007B6E  5004               	movf	(___lwmod@divisor+1)^0,w,c
  1546  007B70  5802               	subwfb	(___lwmod@dividend+1)^0,w,c
  1547  007B72  A0D8               	btfss	status,0,c
  1548  007B74  EFBE  F03D         	goto	u261
  1549  007B78  EFC0  F03D         	goto	u260
  1550  007B7C                     u261:
  1551  007B7C  EFC4  F03D         	goto	l1166
  1552  007B80                     u260:
  1553  007B80  5003               	movf	___lwmod@divisor^0,w,c
  1554  007B82  5E01               	subwf	___lwmod@dividend^0,f,c
  1555  007B84  5004               	movf	(___lwmod@divisor+1)^0,w,c
  1556  007B86  5A02               	subwfb	(___lwmod@dividend+1)^0,f,c
  1557  007B88                     l1166:
  1558  007B88  90D8               	bcf	status,0,c
  1559  007B8A  3204               	rrcf	(___lwmod@divisor+1)^0,f,c
  1560  007B8C  3203               	rrcf	___lwmod@divisor^0,f,c
  1561  007B8E  2E05               	decfsz	___lwmod@counter^0,f,c
  1562  007B90  EFB5  F03D         	goto	l1162
  1563  007B94                     l640:
  1564  007B94  C001  F001         	movff	___lwmod@dividend,?___lwmod
  1565  007B98  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
  1566  007B9C  0012               	return		;funcret
  1567  007B9E                     __end_of___lwmod:
  1568                           	callstack 0
  1569                           
  1570 ;; *************** function ___lwdiv *****************
  1571 ;; Defined at:
  1572 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\lwdiv.c"
  1573 ;; Parameters:    Size  Location     Type
  1574 ;;  dividend        2   13[COMRAM] unsigned int 
  1575 ;;  divisor         2   15[COMRAM] unsigned int 
  1576 ;; Auto vars:     Size  Location     Type
  1577 ;;  quotient        2   17[COMRAM] unsigned int 
  1578 ;;  counter         1   19[COMRAM] unsigned char 
  1579 ;; Return value:  Size  Location     Type
  1580 ;;                  2   13[COMRAM] unsigned int 
  1581 ;; Registers used:
  1582 ;;		wreg, status,2, status,0
  1583 ;; Tracked objects:
  1584 ;;		On entry : 0/0
  1585 ;;		On exit  : 0/0
  1586 ;;		Unchanged: 0/0
  1587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1588 ;;      Params:         4       0       0       0       0       0       0
  1589 ;;      Locals:         3       0       0       0       0       0       0
  1590 ;;      Temps:          0       0       0       0       0       0       0
  1591 ;;      Totals:         7       0       0       0       0       0       0
  1592 ;;Total ram usage:        7 bytes
  1593 ;; Hardware stack levels used:    1
  1594 ;; This function calls:
  1595 ;;		Nothing
  1596 ;; This function is called by:
  1597 ;;		_itoa
  1598 ;;		_pwmSet1
  1599 ;;		_atualizaLCD
  1600 ;;		_AtualizarSistema
  1601 ;;		_pwmSet2
  1602 ;; This function uses a non-reentrant model
  1603 ;;
  1604                           
  1605                           	psect	text15
  1606  007C6E                     __ptext15:
  1607                           	callstack 0
  1608  007C6E                     ___lwdiv:
  1609                           	callstack 27
  1610  007C6E  0E00               	movlw	0
  1611  007C70  6E13               	movwf	(___lwdiv@quotient+1)^0,c
  1612  007C72  0E00               	movlw	0
  1613  007C74  6E12               	movwf	___lwdiv@quotient^0,c
  1614  007C76  5010               	movf	___lwdiv@divisor^0,w,c
  1615  007C78  1011               	iorwf	(___lwdiv@divisor+1)^0,w,c
  1616  007C7A  B4D8               	btfsc	status,2,c
  1617  007C7C  EF42  F03E         	goto	u211
  1618  007C80  EF44  F03E         	goto	u210
  1619  007C84                     u211:
  1620  007C84  EF6C  F03E         	goto	l630
  1621  007C88                     u210:
  1622  007C88  0E01               	movlw	1
  1623  007C8A  6E14               	movwf	___lwdiv@counter^0,c
  1624  007C8C  EF4C  F03E         	goto	l1140
  1625  007C90                     l1138:
  1626  007C90  90D8               	bcf	status,0,c
  1627  007C92  3610               	rlcf	___lwdiv@divisor^0,f,c
  1628  007C94  3611               	rlcf	(___lwdiv@divisor+1)^0,f,c
  1629  007C96  2A14               	incf	___lwdiv@counter^0,f,c
  1630  007C98                     l1140:
  1631  007C98  AE11               	btfss	(___lwdiv@divisor+1)^0,7,c
  1632  007C9A  EF51  F03E         	goto	u221
  1633  007C9E  EF53  F03E         	goto	u220
  1634  007CA2                     u221:
  1635  007CA2  EF48  F03E         	goto	l1138
  1636  007CA6                     u220:
  1637  007CA6                     l1142:
  1638  007CA6  90D8               	bcf	status,0,c
  1639  007CA8  3612               	rlcf	___lwdiv@quotient^0,f,c
  1640  007CAA  3613               	rlcf	(___lwdiv@quotient+1)^0,f,c
  1641  007CAC  5010               	movf	___lwdiv@divisor^0,w,c
  1642  007CAE  5C0E               	subwf	___lwdiv@dividend^0,w,c
  1643  007CB0  5011               	movf	(___lwdiv@divisor+1)^0,w,c
  1644  007CB2  580F               	subwfb	(___lwdiv@dividend+1)^0,w,c
  1645  007CB4  A0D8               	btfss	status,0,c
  1646  007CB6  EF5F  F03E         	goto	u231
  1647  007CBA  EF61  F03E         	goto	u230
  1648  007CBE                     u231:
  1649  007CBE  EF66  F03E         	goto	l1150
  1650  007CC2                     u230:
  1651  007CC2  5010               	movf	___lwdiv@divisor^0,w,c
  1652  007CC4  5E0E               	subwf	___lwdiv@dividend^0,f,c
  1653  007CC6  5011               	movf	(___lwdiv@divisor+1)^0,w,c
  1654  007CC8  5A0F               	subwfb	(___lwdiv@dividend+1)^0,f,c
  1655  007CCA  8012               	bsf	___lwdiv@quotient^0,0,c
  1656  007CCC                     l1150:
  1657  007CCC  90D8               	bcf	status,0,c
  1658  007CCE  3211               	rrcf	(___lwdiv@divisor+1)^0,f,c
  1659  007CD0  3210               	rrcf	___lwdiv@divisor^0,f,c
  1660  007CD2  2E14               	decfsz	___lwdiv@counter^0,f,c
  1661  007CD4  EF53  F03E         	goto	l1142
  1662  007CD8                     l630:
  1663  007CD8  C012  F00E         	movff	___lwdiv@quotient,?___lwdiv
  1664  007CDC  C013  F00F         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1665  007CE0  0012               	return		;funcret
  1666  007CE2                     __end_of___lwdiv:
  1667                           	callstack 0
  1668                           
  1669 ;; *************** function _adc_amostra *****************
  1670 ;; Defined at:
  1671 ;;		line 42 in file "adc.c"
  1672 ;; Parameters:    Size  Location     Type
  1673 ;;  canal           1    wreg     unsigned char 
  1674 ;; Auto vars:     Size  Location     Type
  1675 ;;  canal           1    6[COMRAM] unsigned char 
  1676 ;; Return value:  Size  Location     Type
  1677 ;;                  2    0[COMRAM] unsigned int 
  1678 ;; Registers used:
  1679 ;;		wreg, status,2, status,0
  1680 ;; Tracked objects:
  1681 ;;		On entry : 0/0
  1682 ;;		On exit  : 0/0
  1683 ;;		Unchanged: 0/0
  1684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1685 ;;      Params:         2       0       0       0       0       0       0
  1686 ;;      Locals:         1       0       0       0       0       0       0
  1687 ;;      Temps:          4       0       0       0       0       0       0
  1688 ;;      Totals:         7       0       0       0       0       0       0
  1689 ;;Total ram usage:        7 bytes
  1690 ;; Hardware stack levels used:    1
  1691 ;; This function calls:
  1692 ;;		Nothing
  1693 ;; This function is called by:
  1694 ;;		_atualizaLCD
  1695 ;;		_AtualizarSistema
  1696 ;; This function uses a non-reentrant model
  1697 ;;
  1698                           
  1699                           	psect	text16
  1700  007D68                     __ptext16:
  1701                           	callstack 0
  1702  007D68                     _adc_amostra:
  1703                           	callstack 28
  1704                           
  1705                           ;incstack = 0
  1706                           ;adc_amostra@canal stored from wreg
  1707  007D68  6E07               	movwf	adc_amostra@canal^0,c
  1708  007D6A                     
  1709                           ;adc.c: 44:     switch (canal) {
  1710  007D6A  EFC3  F03E         	goto	l1180
  1711  007D6E                     l1172:
  1712                           
  1713                           ;adc.c: 46:             ADCON0 = 0x01;
  1714  007D6E  0E01               	movlw	1
  1715  007D70  6EC2               	movwf	194,c	;volatile
  1716                           
  1717                           ;adc.c: 47:             break;
  1718  007D72  EFDC  F03E         	goto	l37
  1719  007D76                     l1174:
  1720                           
  1721                           ;adc.c: 49:             ADCON0 = 0x09;
  1722  007D76  0E09               	movlw	9
  1723  007D78  6EC2               	movwf	194,c	;volatile
  1724                           
  1725                           ;adc.c: 50:             break;
  1726  007D7A  EFDC  F03E         	goto	l37
  1727  007D7E                     l1176:
  1728                           
  1729                           ;adc.c: 52:             ADCON0 = 0x11;
  1730  007D7E  0E11               	movlw	17
  1731  007D80  6EC2               	movwf	194,c	;volatile
  1732                           
  1733                           ;adc.c: 53:             break;
  1734  007D82  EFDC  F03E         	goto	l37
  1735  007D86                     l1180:
  1736  007D86  5007               	movf	adc_amostra@canal^0,w,c
  1737  007D88  6E03               	movwf	??_adc_amostra^0,c
  1738  007D8A  6A04               	clrf	(??_adc_amostra+1)^0,c
  1739                           
  1740                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1741                           ; Switch size 1, requested type "simple"
  1742                           ; Number of cases is 1, Range of values is 0 to 0
  1743                           ; switch strategies available:
  1744                           ; Name         Instructions Cycles
  1745                           ; simple_byte            4     3 (average)
  1746                           ;	Chosen strategy is simple_byte
  1747  007D8C  5004               	movf	(??_adc_amostra+1)^0,w,c
  1748  007D8E  0A00               	xorlw	0	; case 0
  1749  007D90  B4D8               	btfsc	status,2,c
  1750  007D92  EFCD  F03E         	goto	l1388
  1751  007D96  EFDC  F03E         	goto	l37
  1752  007D9A                     l1388:
  1753                           
  1754                           ; Switch size 1, requested type "simple"
  1755                           ; Number of cases is 3, Range of values is 0 to 2
  1756                           ; switch strategies available:
  1757                           ; Name         Instructions Cycles
  1758                           ; simple_byte           10     6 (average)
  1759                           ;	Chosen strategy is simple_byte
  1760  007D9A  5003               	movf	??_adc_amostra^0,w,c
  1761  007D9C  0A00               	xorlw	0	; case 0
  1762  007D9E  B4D8               	btfsc	status,2,c
  1763  007DA0  EFB7  F03E         	goto	l1172
  1764  007DA4  0A01               	xorlw	1	; case 1
  1765  007DA6  B4D8               	btfsc	status,2,c
  1766  007DA8  EFBB  F03E         	goto	l1174
  1767  007DAC  0A03               	xorlw	3	; case 2
  1768  007DAE  B4D8               	btfsc	status,2,c
  1769  007DB0  EFBF  F03E         	goto	l1176
  1770  007DB4  EFDC  F03E         	goto	l37
  1771  007DB8                     l37:
  1772                           
  1773                           ;adc.c: 56:     ADCON0bits.GO = 1;
  1774  007DB8  82C2               	bsf	194,1,c	;volatile
  1775  007DBA                     l40:
  1776  007DBA  B2C2               	btfsc	194,1,c	;volatile
  1777  007DBC  EFE2  F03E         	goto	u271
  1778  007DC0  EFE4  F03E         	goto	u270
  1779  007DC4                     u271:
  1780  007DC4  EFDD  F03E         	goto	l40
  1781  007DC8                     u270:
  1782  007DC8                     
  1783                           ;adc.c: 59:     return ((((unsigned int) ADRESH) << 2) | (ADRESL >> 6));
  1784  007DC8  CFC3 F003          	movff	4035,??_adc_amostra	;volatile
  1785  007DCC  0E06               	movlw	6
  1786  007DCE  6E04               	movwf	(??_adc_amostra+1)^0,c
  1787  007DD0                     u285:
  1788  007DD0  90D8               	bcf	status,0,c
  1789  007DD2  3203               	rrcf	??_adc_amostra^0,f,c
  1790  007DD4  2E04               	decfsz	(??_adc_amostra+1)^0,f,c
  1791  007DD6  EFE8  F03E         	goto	u285
  1792  007DDA  5003               	movf	??_adc_amostra^0,w,c
  1793  007DDC  CFC4 F005          	movff	4036,??_adc_amostra+2	;volatile
  1794  007DE0  6A06               	clrf	(??_adc_amostra+3)^0,c
  1795  007DE2  90D8               	bcf	status,0,c
  1796  007DE4  3605               	rlcf	(??_adc_amostra+2)^0,f,c
  1797  007DE6  3606               	rlcf	(??_adc_amostra+3)^0,f,c
  1798  007DE8  90D8               	bcf	status,0,c
  1799  007DEA  3605               	rlcf	(??_adc_amostra+2)^0,f,c
  1800  007DEC  3606               	rlcf	(??_adc_amostra+3)^0,f,c
  1801  007DEE  1005               	iorwf	(??_adc_amostra+2)^0,w,c
  1802  007DF0  6E01               	movwf	?_adc_amostra^0,c
  1803  007DF2  5006               	movf	(??_adc_amostra+3)^0,w,c
  1804  007DF4  6E02               	movwf	(?_adc_amostra+1)^0,c
  1805  007DF6  0012               	return		;funcret
  1806  007DF8                     __end_of_adc_amostra:
  1807                           	callstack 0
  1808                           
  1809 ;; *************** function ___wmul *****************
  1810 ;; Defined at:
  1811 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\Umul16.c"
  1812 ;; Parameters:    Size  Location     Type
  1813 ;;  multiplier      2    7[COMRAM] unsigned int 
  1814 ;;  multiplicand    2    9[COMRAM] unsigned int 
  1815 ;; Auto vars:     Size  Location     Type
  1816 ;;  product         2   11[COMRAM] unsigned int 
  1817 ;; Return value:  Size  Location     Type
  1818 ;;                  2    7[COMRAM] unsigned int 
  1819 ;; Registers used:
  1820 ;;		wreg, status,2, status,0, prodl, prodh
  1821 ;; Tracked objects:
  1822 ;;		On entry : 0/0
  1823 ;;		On exit  : 0/0
  1824 ;;		Unchanged: 0/0
  1825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1826 ;;      Params:         4       0       0       0       0       0       0
  1827 ;;      Locals:         2       0       0       0       0       0       0
  1828 ;;      Temps:          0       0       0       0       0       0       0
  1829 ;;      Totals:         6       0       0       0       0       0       0
  1830 ;;Total ram usage:        6 bytes
  1831 ;; Hardware stack levels used:    1
  1832 ;; This function calls:
  1833 ;;		Nothing
  1834 ;; This function is called by:
  1835 ;;		_pwmSet1
  1836 ;;		_atualizaLCD
  1837 ;;		_AtualizarSistema
  1838 ;;		_pwmSet2
  1839 ;;		_atraso_s
  1840 ;; This function uses a non-reentrant model
  1841 ;;
  1842                           
  1843                           	psect	text17
  1844  007A2C                     __ptext17:
  1845                           	callstack 0
  1846  007A2C                     ___wmul:
  1847                           	callstack 28
  1848  007A2C  5008               	movf	___wmul@multiplier^0,w,c
  1849  007A2E  020A               	mulwf	___wmul@multiplicand^0,c
  1850  007A30  CFF3 F00C          	movff	prodl,___wmul@product
  1851  007A34  CFF4 F00D          	movff	prodh,___wmul@product+1
  1852  007A38  5008               	movf	___wmul@multiplier^0,w,c
  1853  007A3A  020B               	mulwf	(___wmul@multiplicand+1)^0,c
  1854  007A3C  50F3               	movf	243,w,c
  1855  007A3E  260D               	addwf	(___wmul@product+1)^0,f,c
  1856  007A40  5009               	movf	(___wmul@multiplier+1)^0,w,c
  1857  007A42  020A               	mulwf	___wmul@multiplicand^0,c
  1858  007A44  50F3               	movf	243,w,c
  1859  007A46  260D               	addwf	(___wmul@product+1)^0,f,c
  1860  007A48  C00C  F008         	movff	___wmul@product,?___wmul
  1861  007A4C  C00D  F009         	movff	___wmul@product+1,?___wmul+1
  1862  007A50  0012               	return		;funcret
  1863  007A52                     __end_of___wmul:
  1864                           	callstack 0
  1865  0000                     
  1866                           	psect	rparam
  1867  0000                     
  1868                           	psect	idloc
  1869                           
  1870                           ;Config register IDLOC0 @ 0x200000
  1871                           ;	unspecified, using default values
  1872  200000                     	org	2097152
  1873  200000  FF                 	db	255
  1874                           
  1875                           ;Config register IDLOC1 @ 0x200001
  1876                           ;	unspecified, using default values
  1877  200001                     	org	2097153
  1878  200001  FF                 	db	255
  1879                           
  1880                           ;Config register IDLOC2 @ 0x200002
  1881                           ;	unspecified, using default values
  1882  200002                     	org	2097154
  1883  200002  FF                 	db	255
  1884                           
  1885                           ;Config register IDLOC3 @ 0x200003
  1886                           ;	unspecified, using default values
  1887  200003                     	org	2097155
  1888  200003  FF                 	db	255
  1889                           
  1890                           ;Config register IDLOC4 @ 0x200004
  1891                           ;	unspecified, using default values
  1892  200004                     	org	2097156
  1893  200004  FF                 	db	255
  1894                           
  1895                           ;Config register IDLOC5 @ 0x200005
  1896                           ;	unspecified, using default values
  1897  200005                     	org	2097157
  1898  200005  FF                 	db	255
  1899                           
  1900                           ;Config register IDLOC6 @ 0x200006
  1901                           ;	unspecified, using default values
  1902  200006                     	org	2097158
  1903  200006  FF                 	db	255
  1904                           
  1905                           ;Config register IDLOC7 @ 0x200007
  1906                           ;	unspecified, using default values
  1907  200007                     	org	2097159
  1908  200007  FF                 	db	255
  1909                           
  1910                           	psect	config
  1911                           
  1912                           ; Padding undefined space
  1913  300000                     	org	3145728
  1914  300000  FF                 	db	255
  1915                           
  1916                           ;Config register CONFIG1H @ 0x300001
  1917                           ;	Oscillator Selection bits
  1918                           ;	OSC = HS, HS oscillator
  1919                           ;	Fail-Safe Clock Monitor Enable bit
  1920                           ;	FCMEN = 0x0, unprogrammed default
  1921                           ;	Internal/External Oscillator Switchover bit
  1922                           ;	IESO = 0x0, unprogrammed default
  1923  300001                     	org	3145729
  1924  300001  02                 	db	2
  1925                           
  1926                           ;Config register CONFIG2L @ 0x300002
  1927                           ;	unspecified, using default values
  1928                           ;	Power-up Timer Enable bit
  1929                           ;	PWRT = 0x1, unprogrammed default
  1930                           ;	Brown-out Reset Enable bits
  1931                           ;	BOREN = 0x3, unprogrammed default
  1932                           ;	Brown Out Reset Voltage bits
  1933                           ;	BORV = 0x3, unprogrammed default
  1934  300002                     	org	3145730
  1935  300002  1F                 	db	31
  1936                           
  1937                           ;Config register CONFIG2H @ 0x300003
  1938                           ;	Watchdog Timer Enable bit
  1939                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1940                           ;	Watchdog Timer Postscale Select bits
  1941                           ;	WDTPS = 1, 1:1
  1942  300003                     	org	3145731
  1943  300003  00                 	db	0
  1944                           
  1945                           ; Padding undefined space
  1946  300004                     	org	3145732
  1947  300004  FF                 	db	255
  1948                           
  1949                           ;Config register CONFIG3H @ 0x300005
  1950                           ;	unspecified, using default values
  1951                           ;	CCP2 MUX bit
  1952                           ;	CCP2MX = 0x1, unprogrammed default
  1953                           ;	PORTB A/D Enable bit
  1954                           ;	PBADEN = 0x1, unprogrammed default
  1955                           ;	Low-Power Timer1 Oscillator Enable bit
  1956                           ;	LPT1OSC = 0x0, unprogrammed default
  1957                           ;	MCLR Pin Enable bit
  1958                           ;	MCLRE = 0x1, unprogrammed default
  1959  300005                     	org	3145733
  1960  300005  83                 	db	131
  1961                           
  1962                           ;Config register CONFIG4L @ 0x300006
  1963                           ;	Stack Full/Underflow Reset Enable bit
  1964                           ;	STVREN = 0x1, unprogrammed default
  1965                           ;	Single-Supply ICSP Enable bit
  1966                           ;	LVP = OFF, Single-Supply ICSP disabled
  1967                           ;	Extended Instruction Set Enable bit
  1968                           ;	XINST = 0x0, unprogrammed default
  1969                           ;	Background Debugger Enable bit
  1970                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
  1971  300006                     	org	3145734
  1972  300006  81                 	db	129
  1973                           
  1974                           ; Padding undefined space
  1975  300007                     	org	3145735
  1976  300007  FF                 	db	255
  1977                           
  1978                           ;Config register CONFIG5L @ 0x300008
  1979                           ;	unspecified, using default values
  1980                           ;	Code Protection bit
  1981                           ;	CP0 = 0x1, unprogrammed default
  1982                           ;	Code Protection bit
  1983                           ;	CP1 = 0x1, unprogrammed default
  1984                           ;	Code Protection bit
  1985                           ;	CP2 = 0x1, unprogrammed default
  1986                           ;	Code Protection bit
  1987                           ;	CP3 = 0x1, unprogrammed default
  1988  300008                     	org	3145736
  1989  300008  0F                 	db	15
  1990                           
  1991                           ;Config register CONFIG5H @ 0x300009
  1992                           ;	unspecified, using default values
  1993                           ;	Boot Block Code Protection bit
  1994                           ;	CPB = 0x1, unprogrammed default
  1995                           ;	Data EEPROM Code Protection bit
  1996                           ;	CPD = 0x1, unprogrammed default
  1997  300009                     	org	3145737
  1998  300009  C0                 	db	192
  1999                           
  2000                           ;Config register CONFIG6L @ 0x30000A
  2001                           ;	unspecified, using default values
  2002                           ;	Write Protection bit
  2003                           ;	WRT0 = 0x1, unprogrammed default
  2004                           ;	Write Protection bit
  2005                           ;	WRT1 = 0x1, unprogrammed default
  2006                           ;	Write Protection bit
  2007                           ;	WRT2 = 0x1, unprogrammed default
  2008                           ;	Write Protection bit
  2009                           ;	WRT3 = 0x1, unprogrammed default
  2010  30000A                     	org	3145738
  2011  30000A  0F                 	db	15
  2012                           
  2013                           ;Config register CONFIG6H @ 0x30000B
  2014                           ;	unspecified, using default values
  2015                           ;	Configuration Register Write Protection bit
  2016                           ;	WRTC = 0x1, unprogrammed default
  2017                           ;	Boot Block Write Protection bit
  2018                           ;	WRTB = 0x1, unprogrammed default
  2019                           ;	Data EEPROM Write Protection bit
  2020                           ;	WRTD = 0x1, unprogrammed default
  2021  30000B                     	org	3145739
  2022  30000B  E0                 	db	224
  2023                           
  2024                           ;Config register CONFIG7L @ 0x30000C
  2025                           ;	unspecified, using default values
  2026                           ;	Table Read Protection bit
  2027                           ;	EBTR0 = 0x1, unprogrammed default
  2028                           ;	Table Read Protection bit
  2029                           ;	EBTR1 = 0x1, unprogrammed default
  2030                           ;	Table Read Protection bit
  2031                           ;	EBTR2 = 0x1, unprogrammed default
  2032                           ;	Table Read Protection bit
  2033                           ;	EBTR3 = 0x1, unprogrammed default
  2034  30000C                     	org	3145740
  2035  30000C  0F                 	db	15
  2036                           
  2037                           ;Config register CONFIG7H @ 0x30000D
  2038                           ;	unspecified, using default values
  2039                           ;	Boot Block Table Read Protection bit
  2040                           ;	EBTRB = 0x1, unprogrammed default
  2041  30000D                     	org	3145741
  2042  30000D  40                 	db	64
  2043                           tosu	equ	0xFFF
  2044                           tosh	equ	0xFFE
  2045                           tosl	equ	0xFFD
  2046                           stkptr	equ	0xFFC
  2047                           pclatu	equ	0xFFB
  2048                           pclath	equ	0xFFA
  2049                           pcl	equ	0xFF9
  2050                           tblptru	equ	0xFF8
  2051                           tblptrh	equ	0xFF7
  2052                           tblptrl	equ	0xFF6
  2053                           tablat	equ	0xFF5
  2054                           prodh	equ	0xFF4
  2055                           prodl	equ	0xFF3
  2056                           indf0	equ	0xFEF
  2057                           postinc0	equ	0xFEE
  2058                           postdec0	equ	0xFED
  2059                           preinc0	equ	0xFEC
  2060                           plusw0	equ	0xFEB
  2061                           fsr0h	equ	0xFEA
  2062                           fsr0l	equ	0xFE9
  2063                           wreg	equ	0xFE8
  2064                           indf1	equ	0xFE7
  2065                           postinc1	equ	0xFE6
  2066                           postdec1	equ	0xFE5
  2067                           preinc1	equ	0xFE4
  2068                           plusw1	equ	0xFE3
  2069                           fsr1h	equ	0xFE2
  2070                           fsr1l	equ	0xFE1
  2071                           bsr	equ	0xFE0
  2072                           indf2	equ	0xFDF
  2073                           postinc2	equ	0xFDE
  2074                           postdec2	equ	0xFDD
  2075                           preinc2	equ	0xFDC
  2076                           plusw2	equ	0xFDB
  2077                           fsr2h	equ	0xFDA
  2078                           fsr2l	equ	0xFD9
  2079                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         10
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     25      35
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    itoa@str	PTR unsigned char  size(2) Largest target is 6
		 -> str(COMRAM[6]), 


Critical Paths under _main in COMRAM

    _main->_ConfiguraLimiteInferior
    _main->_ConfiguraLimiteSuperior
    _lcd_init->_lcd_cmd
    _AtualizarSistema->_pwmSet1
    _pwmSet1->___lwdiv
    _atualizaLCD->_itoa
    _lcd_dat->_atraso_ms
    _lcd_cmd->_atraso_ms
    _itoa->___lwdiv
    ___lwdiv->___wmul
    ___wmul->_adc_amostra

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   26312
                   _AtualizarSistema
            _ConfiguraLimiteInferior
            _ConfiguraLimiteSuperior
                           _adc_init
                           _lcd_init
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0    1377
                          _atraso_ms
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (1) _adc_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfiguraLimiteSuperior                              1     1      0    6750
                                             24 COMRAM     1     1      0
                        _atualizaLCD
 ---------------------------------------------------------------------------------
 (1) _ConfiguraLimiteInferior                              1     1      0    6750
                                             24 COMRAM     1     1      0
                        _atualizaLCD
 ---------------------------------------------------------------------------------
 (1) _AtualizarSistema                                     0     0      0   11435
                            ___lwdiv
                             ___wmul
                        _adc_amostra
                        _atualizaLCD
                            _pwmInit
                            _pwmSet1
 ---------------------------------------------------------------------------------
 (2) _pwmSet1                                              5     5      0    2388
                                             20 COMRAM     5     5      0
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _pwmInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _atualizaLCD                                          0     0      0    6728
                            ___lwdiv
                             ___wmul
                        _adc_amostra
                               _itoa
                            _lcd_cmd
                            _lcd_dat
 ---------------------------------------------------------------------------------
 (3) _lcd_dat                                              1     1      0     707
                                              6 COMRAM     1     1      0
                          _atraso_ms
                             _lcd_wr
 ---------------------------------------------------------------------------------
 (2) _lcd_cmd                                              1     1      0     707
                                              6 COMRAM     1     1      0
                          _atraso_ms
                             _lcd_wr
 ---------------------------------------------------------------------------------
 (3) _lcd_wr                                               1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _atraso_ms                                            6     4      2     670
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (3) _itoa                                                 4     0      4    2995
                                             20 COMRAM     4     0      4
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              5     1      4     767
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4    1378
                                             13 COMRAM     7     3      4
                            ___lwmod (ARG)
                             ___wmul (ARG)
                        _adc_amostra (ARG)
 ---------------------------------------------------------------------------------
 (3) _adc_amostra                                          7     5      2      22
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     919
                                              7 COMRAM     6     2      4
                        _adc_amostra (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _AtualizarSistema
     ___lwdiv
       ___lwmod (ARG)
       ___wmul (ARG)
         _adc_amostra (ARG)
       _adc_amostra (ARG)
     ___wmul
       _adc_amostra (ARG)
     _adc_amostra
     _atualizaLCD
       ___lwdiv
         ___lwmod (ARG)
         ___wmul (ARG)
           _adc_amostra (ARG)
         _adc_amostra (ARG)
       ___wmul
         _adc_amostra (ARG)
       _adc_amostra
       _itoa
         ___lwdiv
           ___lwmod (ARG)
           ___wmul (ARG)
             _adc_amostra (ARG)
           _adc_amostra (ARG)
         ___lwmod
       _lcd_cmd
         _atraso_ms
         _lcd_wr
       _lcd_dat
         _atraso_ms
         _lcd_wr
     _pwmInit
     _pwmSet1
       ___lwdiv
         ___lwmod (ARG)
         ___wmul (ARG)
           _adc_amostra (ARG)
         _adc_amostra (ARG)
       ___wmul
         _adc_amostra (ARG)
   _ConfiguraLimiteInferior
     _atualizaLCD
       ___lwdiv
         ___lwmod (ARG)
         ___wmul (ARG)
           _adc_amostra (ARG)
         _adc_amostra (ARG)
       ___wmul
         _adc_amostra (ARG)
       _adc_amostra
       _itoa
         ___lwdiv
           ___lwmod (ARG)
           ___wmul (ARG)
             _adc_amostra (ARG)
           _adc_amostra (ARG)
         ___lwmod
       _lcd_cmd
         _atraso_ms
         _lcd_wr
       _lcd_dat
         _atraso_ms
         _lcd_wr
   _ConfiguraLimiteSuperior
     _atualizaLCD
       ___lwdiv
         ___lwmod (ARG)
         ___wmul (ARG)
           _adc_amostra (ARG)
         _adc_amostra (ARG)
       ___wmul
         _adc_amostra (ARG)
       _adc_amostra
       _itoa
         ___lwdiv
           ___lwmod (ARG)
           ___wmul (ARG)
             _adc_amostra (ARG)
           _adc_amostra (ARG)
         ___lwmod
       _lcd_cmd
         _atraso_ms
         _lcd_wr
       _lcd_dat
         _atraso_ms
         _lcd_wr
   _adc_init
   _lcd_init
     _atraso_ms
     _lcd_cmd
       _atraso_ms
       _lcd_wr

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     19      23       1       27.6%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      23      15        0.0%
DATA                 0      0      23       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Wed Jul 28 22:56:52 2021

                              l40 7DBA                                l32 7A00  
                              l43 7DF6                                l51 79DA  
                              l60 7B38                                l37 7DB8  
                              l46 7FFE                                l54 7A7A  
                              l57 7AA4                                l69 7C6C  
                              l78 7A14               ___wmul@multiplicand 000A  
            __size_of_adc_amostra 0090                               l103 7EF6  
                             l106 79F2                               l116 7D66  
                             l109 79E6                               l126 7C00  
                             l139 7A50                               l630 7CD8  
                             l640 7B94                               l812 79D6  
                             l637 7CE0                               l647 7B9C  
                             l950 7A0A                               l946 7A02  
                             l948 7A06                               u200 7C00  
                             u201 7BFC                               u210 7C88  
                             u211 7C84                               u220 7CA6  
                             u300 7D4A                               u221 7CA2  
                             u301 7D46                               u230 7CC2  
                             u231 7CBE                               u240 7B4C  
                             u241 7B48                               u250 7B6A  
                             u251 7B66                               u260 7B80  
                             u180 7BBE                               u261 7B7C  
                             u181 7BBA                               u270 7DC8  
                             u190 7BD6                               u271 7DC4  
                             u191 7BD2                               u290 7D2A  
                             u291 7D26                               u285 7DD0  
                             _pot 001B                               _tmp 001A  
                             _str 001E                               wreg 000FE8  
                    ?_atualizaLCD 0001                              l1012 79F4  
                            l1110 7BAE                              l1120 7BDA  
                            l1200 7A5E                              l1114 7BC2  
                            l1130 7BEA                              l1106 7B9E  
                            l1202 7A6A                              l1210 7A80  
                            l1140 7C98                              l1132 7C6E  
                            l1124 7BE0                              l1116 7BC6  
                            l1108 7BAA                              l1204 7A6C  
                            l1220 7AA2                              l1212 7A86  
                            l1300 79EE                              l1222 7A2C  
                            l1150 7CCC                              l1142 7CA6  
                            l1134 7C76                              l1206 7A78  
                            l1214 7A88                              l1230 7C22  
                            l1310 7D18                              l1302 79DE  
                            l1224 7A48                              l1152 7CD2  
                            l1144 7CAC                              l1136 7C88  
                            l1160 7B5C                              l1128 7BE6  
                            l1216 7A94                              l1208 7A7E  
                            l1240 7E2A                              l1232 7C3E  
                            l1320 7D4E                              l1312 7D2A  
                            l1304 79E2                              l1170 7D6A  
                            l1146 7CC2                              l1138 7C90  
                            l1162 7B6A                              l1154 7B3A  
                            l1218 7A96                              l1250 7E54  
                            l1242 7E30                              l1234 7C46  
                            l1322 7D58                              l1314 7D2E  
                            l1306 7CE2                              l1330 7ABE  
                            l1172 7D6E                              l1180 7D86  
                            l1148 7CCA                              l1164 7B80  
                            l1156 7B4C                              l1260 7E7E  
                            l1252 7E5A                              l1244 7E42  
                            l1236 7C5E                              l1228 7C04  
                            l1324 7D5C                              l1316 7D38  
                            l1308 7CE6                              l1332 7AC2  
                            l1182 7DC8                              l1174 7D76  
                            l1166 7B88                              l1158 7B54  
                            l1190 7EF8                              l1270 7EA8  
                            l1262 7E84                              l1254 7E60  
                            l1246 7E48                              l1238 7DF8  
                            l1318 7D4A                              l1326 7D62  
                            l1334 7AC6                              l1176 7D7E  
                            l1168 7B8E                              l1192 7FEE  
                            l1280 7EC6                              l1272 7EAE  
                            l1264 7E8A                              l1256 7E72  
                            l1248 7E4E                              l1336 7ACC  
                            l1328 7AA6                              l1194 7A54  
                            l1290 7EF0                              l1282 7ED8  
                            l1274 7EB4                              l1266 7E90  
                            l1258 7E78                              l1338 7AD2  
                            l1196 7A56                              l1284 7EDE  
                            l1276 7EBA                              l1268 7EA2  
                            l1292 7ADE                              l1198 7A5C  
                            l1286 7EE4                              l1278 7EC0  
                            l1294 7AE2                              l1288 7EEA  
                            l1296 7AEE                              l1298 79EA  
                            l1388 7D9A                              _main 7AA6  
                            _itoa 7EF8                              fsr2h 000FDA  
                            indf2 000FDF                              fsr2l 000FD9  
                            prodh 000FF4                              prodl 000FF3  
                            start 0000                      ___param_bank 000000  
       __size_of_AtualizarSistema 0086                             ?_main 0001  
                           ?_itoa 0015                   __end_of___lwdiv 7CE2  
                 __end_of___lwmod 7B9E                   __end_of_lcd_dat 7AA6  
                 __end_of_lcd_cmd 7A7C                   __end_of_pwmSet1 7C6E  
                 __end_of_pwmInit 7A16                             status 000FD8  
                 __initialization 7A16                      __end_of_main 7ADE  
                    __end_of_itoa 8000                            ??_main 001A  
                          ??_itoa 0019                     __activetblptr 000002  
                          _ADCON0 000FC2                            _ADCON1 000FC1  
                          _ADCON2 000FC0                            _ADRESH 000FC4  
                          _ADRESL 000FC3                  __end_of_adc_init 7A02  
        ?_ConfiguraLimiteInferior 0001                  __end_of_lcd_init 7B3A  
                          ___wmul 7A2C                         ??___lwdiv 0012  
                       ??___lwmod 0005                            _lcd_wr 79D4  
                          clear_0 7A1C          ?_ConfiguraLimiteSuperior 0001  
                       ??_lcd_dat 0007                         ??_lcd_cmd 0007  
                          tblptru 000FF8                         ??_pwmSet1 0015  
                       ??_pwmInit 0001              __size_of_atualizaLCD 0100  
                      __accesstop 0080           __end_of__initialization 7A22  
                   ___rparam_used 000001                    __pcstackCOMRAM 0001  
                _AtualizarSistema 7CE2   __end_of_ConfiguraLimiteInferior 79E8  
              __size_of_atraso_ms 0064   __end_of_ConfiguraLimiteSuperior 79F4  
                         ?___wmul 0008                     ??_adc_amostra 0003  
                         ?_lcd_wr 0001                         ?_adc_init 0001  
                       ?_lcd_init 0001                           __Hparam 0000  
                         __Lparam 0000                   __size_of___wmul 0026  
                         ___lwdiv 7C6E                           ___lwmod 7B3A  
               __end_of_atraso_ms 7C02                   __size_of_lcd_wr 0008  
                         __pcinit 7A16                           __ramtop 0600  
                      ??_adc_init 0001                           __ptext0 7AA6  
                         __ptext1 7ADE                           __ptext2 79F4  
                         __ptext3 79E8                           __ptext4 79DC  
                         __ptext5 7CE2                           __ptext6 7C02  
                         __ptext7 7A02                           __ptext8 7DF8  
                         __ptext9 7A7C                           _lcd_dat 7A7C  
                         _lcd_cmd 7A52               __end_of_adc_amostra 7DF8  
     ConfiguraLimiteInferior@temp 0019                           _pwmSet1 7C02  
                         _pwmInit 7A02                        ??_lcd_init 0008  
            end_of_initialization 7A22                           itoa@val 0015  
                   __Lmediumconst 0000                           itoa@str 0017  
                         postinc0 000FEE  __size_of_ConfiguraLimiteInferior 000C  
                      lcd_dat@val 0007                        lcd_cmd@val 0007  
__size_of_ConfiguraLimiteSuperior 000C          __end_of_AtualizarSistema 7D68  
     ConfiguraLimiteSuperior@temp 0019                       _adc_amostra 7D68  
                      atraso_ms@i 0003                        atraso_ms@j 0005  
                      atraso_ms@k 0006                        atraso_ms@t 0001  
                  __end_of___wmul 7A52                    __end_of_lcd_wr 79DC  
                   ??_atualizaLCD 0019               start_initialization 7A16  
                        ??___wmul 000C                          ??_lcd_wr 0001  
               __size_of_adc_init 000E                       __pbssCOMRAM 001A  
             __end_of_atualizaLCD 7EF8                 __size_of_lcd_init 005C  
                ___lwdiv@dividend 000E           _ConfiguraLimiteInferior 79DC  
                        ?___lwdiv 000E                          ?___lwmod 0001  
                        ?_lcd_dat 0001                          ?_lcd_cmd 0001  
                       _atraso_ms 7B9E                          ?_pwmSet1 0001  
                        ?_pwmInit 0001                  ___lwdiv@quotient 0012  
         _ConfiguraLimiteSuperior 79E8                    ___wmul@product 000C  
                      pwmSet1@val 0018                        _ADCON0bits 000FC2  
               ___wmul@multiplier 0008                        ?_atraso_ms 0001  
                       lcd_wr@val 0001                       _atualizaLCD 7DF8  
               ?_AtualizarSistema 0001                ??_AtualizarSistema 001A  
       ??_ConfiguraLimiteInferior 0019                          __Hrparam 0000  
                        __Lrparam 0000                      ?_adc_amostra 0001  
                __size_of___lwdiv 0074                  __size_of___lwmod 0064  
                 pwmSet1@porcento 0017                          _adc_init 79F4  
                __size_of_lcd_dat 002A                  __size_of_lcd_cmd 002A  
       ??_ConfiguraLimiteSuperior 0019                   ___lwdiv@divisor 0010  
                 ___lwdiv@counter 0014                          __ptext10 7A52  
                        __ptext11 79D4                          __ptext12 7B9E  
                        __ptext13 7EF8                          __ptext14 7B3A  
                        __ptext15 7C6E                          __ptext16 7D68  
                        __ptext17 7A2C                  __size_of_pwmSet1 006C  
                __size_of_pwmInit 0014                          _lcd_init 7ADE  
                        _inferior 001C                     __size_of_main 0038  
                   __size_of_itoa 0108                          _superior 001D  
                     ??_atraso_ms 0003                  ___lwmod@dividend 0001  
                 ___lwmod@divisor 0003                   ___lwmod@counter 0005  
                adc_amostra@canal 0007  
